// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_geom_Ellipse
#define INCLUDED_verb_geom_Ellipse

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_verb_geom_EllipseArc
#include <verb/geom/EllipseArc.h>
#endif
HX_DECLARE_CLASS2(verb,core,ISerializable)
HX_DECLARE_CLASS2(verb,core,SerializableBase)
HX_DECLARE_CLASS2(verb,geom,Ellipse)
HX_DECLARE_CLASS2(verb,geom,EllipseArc)
HX_DECLARE_CLASS2(verb,geom,ICurve)
HX_DECLARE_CLASS2(verb,geom,NurbsCurve)

namespace verb{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES Ellipse_obj : public  ::verb::geom::EllipseArc_obj
{
	public:
		typedef  ::verb::geom::EllipseArc_obj super;
		typedef Ellipse_obj OBJ_;
		Ellipse_obj();

	public:
		enum { _hx_ClassId = 0x7f0bd59f };

		void __construct(::Array< Float > center,::Array< Float > xaxis,::Array< Float > yaxis);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.geom.Ellipse")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.geom.Ellipse"); }
		static ::hx::ObjectPtr< Ellipse_obj > __new(::Array< Float > center,::Array< Float > xaxis,::Array< Float > yaxis);
		static ::hx::ObjectPtr< Ellipse_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< Float > center,::Array< Float > xaxis,::Array< Float > yaxis);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Ellipse_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Ellipse",be,68,d7,d8); }

};

} // end namespace verb
} // end namespace geom

#endif /* INCLUDED_verb_geom_Ellipse */ 
