// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_geom_ISurface
#define INCLUDED_verb_geom_ISurface

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_verb_core_ISerializable
#include <verb/core/ISerializable.h>
#endif
HX_DECLARE_CLASS2(verb,core,ISerializable)
HX_DECLARE_CLASS2(verb,core,Interval)
HX_DECLARE_CLASS2(verb,core,NurbsSurfaceData)
HX_DECLARE_CLASS2(verb,core,SerializableBase)
HX_DECLARE_CLASS2(verb,geom,ISurface)

namespace verb{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES ISurface_obj {
	public:
		typedef  ::verb::core::ISerializable_obj super;
		HX_DO_INTERFACE_RTTI;

		::String (::hx::Object :: *_hx_serialize)(); 
		static inline ::String serialize( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::verb::geom::ISurface_obj *>(_hx_.mPtr->_hx_getInterface(0x733f72bf)))->_hx_serialize)();
		}
		 ::verb::core::NurbsSurfaceData (::hx::Object :: *_hx_asNurbs)(); 
		static inline  ::verb::core::NurbsSurfaceData asNurbs( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::verb::geom::ISurface_obj *>(_hx_.mPtr->_hx_getInterface(0x733f72bf)))->_hx_asNurbs)();
		}
		 ::verb::core::Interval (::hx::Object :: *_hx_domainU)(); 
		static inline  ::verb::core::Interval domainU( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::verb::geom::ISurface_obj *>(_hx_.mPtr->_hx_getInterface(0x733f72bf)))->_hx_domainU)();
		}
		 ::verb::core::Interval (::hx::Object :: *_hx_domainV)(); 
		static inline  ::verb::core::Interval domainV( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::verb::geom::ISurface_obj *>(_hx_.mPtr->_hx_getInterface(0x733f72bf)))->_hx_domainV)();
		}
		::Array< Float > (::hx::Object :: *_hx_point)(Float u,Float v); 
		static inline ::Array< Float > point( ::Dynamic _hx_,Float u,Float v) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::verb::geom::ISurface_obj *>(_hx_.mPtr->_hx_getInterface(0x733f72bf)))->_hx_point)(u,v);
		}
		::Array< ::Dynamic> (::hx::Object :: *_hx_derivatives)(Float u,Float v,::hx::Null< int >  numDerivs); 
		static inline ::Array< ::Dynamic> derivatives( ::Dynamic _hx_,Float u,Float v,::hx::Null< int >  numDerivs) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::verb::geom::ISurface_obj *>(_hx_.mPtr->_hx_getInterface(0x733f72bf)))->_hx_derivatives)(u,v,numDerivs);
		}
};

} // end namespace verb
} // end namespace geom

#endif /* INCLUDED_verb_geom_ISurface */ 
