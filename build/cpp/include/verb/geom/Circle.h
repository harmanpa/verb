// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_geom_Circle
#define INCLUDED_verb_geom_Circle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_verb_geom_Arc
#include <verb/geom/Arc.h>
#endif
HX_DECLARE_CLASS2(verb,core,ISerializable)
HX_DECLARE_CLASS2(verb,core,SerializableBase)
HX_DECLARE_CLASS2(verb,geom,Arc)
HX_DECLARE_CLASS2(verb,geom,Circle)
HX_DECLARE_CLASS2(verb,geom,ICurve)
HX_DECLARE_CLASS2(verb,geom,NurbsCurve)

namespace verb{
namespace geom{


class HXCPP_CLASS_ATTRIBUTES Circle_obj : public  ::verb::geom::Arc_obj
{
	public:
		typedef  ::verb::geom::Arc_obj super;
		typedef Circle_obj OBJ_;
		Circle_obj();

	public:
		enum { _hx_ClassId = 0x575a7ad3 };

		void __construct(::Array< Float > center,::Array< Float > xaxis,::Array< Float > yaxis,Float radius);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.geom.Circle")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.geom.Circle"); }
		static ::hx::ObjectPtr< Circle_obj > __new(::Array< Float > center,::Array< Float > xaxis,::Array< Float > yaxis,Float radius);
		static ::hx::ObjectPtr< Circle_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< Float > center,::Array< Float > xaxis,::Array< Float > yaxis,Float radius);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Circle_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Circle",30,e6,a1,8a); }

};

} // end namespace verb
} // end namespace geom

#endif /* INCLUDED_verb_geom_Circle */ 
