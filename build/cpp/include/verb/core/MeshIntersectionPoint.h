// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_core_MeshIntersectionPoint
#define INCLUDED_verb_core_MeshIntersectionPoint

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_d84ef5c022496ef2_45_new)
HX_DECLARE_CLASS2(verb,core,MeshIntersectionPoint)

namespace verb{
namespace core{


class HXCPP_CLASS_ATTRIBUTES MeshIntersectionPoint_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef MeshIntersectionPoint_obj OBJ_;
		MeshIntersectionPoint_obj();

	public:
		enum { _hx_ClassId = 0x454088bc };

		void __construct(::Array< Float > uv0,::Array< Float > uv1,::Array< Float > point,int faceIndex0,int faceIndex1);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.core.MeshIntersectionPoint")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.core.MeshIntersectionPoint"); }

		inline static ::hx::ObjectPtr< MeshIntersectionPoint_obj > __new(::Array< Float > uv0,::Array< Float > uv1,::Array< Float > point,int faceIndex0,int faceIndex1) {
			::hx::ObjectPtr< MeshIntersectionPoint_obj > __this = new MeshIntersectionPoint_obj();
			__this->__construct(uv0,uv1,point,faceIndex0,faceIndex1);
			return __this;
		}

		inline static ::hx::ObjectPtr< MeshIntersectionPoint_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< Float > uv0,::Array< Float > uv1,::Array< Float > point,int faceIndex0,int faceIndex1) {
			MeshIntersectionPoint_obj *__this = (MeshIntersectionPoint_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MeshIntersectionPoint_obj), true, "verb.core.MeshIntersectionPoint"));
			*(void **)__this = MeshIntersectionPoint_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_d84ef5c022496ef2_45_new)
HXLINE(  57)		( ( ::verb::core::MeshIntersectionPoint)(__this) )->visited = false;
HXLINE(  56)		( ( ::verb::core::MeshIntersectionPoint)(__this) )->adj = null();
HXLINE(  55)		( ( ::verb::core::MeshIntersectionPoint)(__this) )->opp = null();
HXLINE(  60)		( ( ::verb::core::MeshIntersectionPoint)(__this) )->uv0 = uv0;
HXLINE(  61)		( ( ::verb::core::MeshIntersectionPoint)(__this) )->uv1 = uv1;
HXLINE(  62)		( ( ::verb::core::MeshIntersectionPoint)(__this) )->point = point;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MeshIntersectionPoint_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MeshIntersectionPoint",7a,44,7f,87); }

		::Array< Float > uv0;
		::Array< Float > uv1;
		::Array< Float > point;
		int faceIndex0;
		int faceIndex1;
		 ::verb::core::MeshIntersectionPoint opp;
		 ::verb::core::MeshIntersectionPoint adj;
		bool visited;
};

} // end namespace verb
} // end namespace core

#endif /* INCLUDED_verb_core_MeshIntersectionPoint */ 
