// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_core_KdTree_verb_core_MeshIntersectionPoint
#define INCLUDED_verb_core_KdTree_verb_core_MeshIntersectionPoint

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(verb,core,HeapElement_verb_core_KdPoint_verb_core_MeshIntersectionPoint)
HX_DECLARE_CLASS2(verb,core,KdNode_verb_core_MeshIntersectionPoint)
HX_DECLARE_CLASS2(verb,core,KdPoint_verb_core_MeshIntersectionPoint)
HX_DECLARE_CLASS2(verb,core,KdTree_verb_core_MeshIntersectionPoint)

namespace verb{
namespace core{


class HXCPP_CLASS_ATTRIBUTES KdTree_verb_core_MeshIntersectionPoint_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef KdTree_verb_core_MeshIntersectionPoint_obj OBJ_;
		KdTree_verb_core_MeshIntersectionPoint_obj();

	public:
		enum { _hx_ClassId = 0x2b6a121c };

		void __construct(::Array< ::Dynamic> points, ::Dynamic distanceFunction);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.core.KdTree_verb_core_MeshIntersectionPoint")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.core.KdTree_verb_core_MeshIntersectionPoint"); }
		static ::hx::ObjectPtr< KdTree_verb_core_MeshIntersectionPoint_obj > __new(::Array< ::Dynamic> points, ::Dynamic distanceFunction);
		static ::hx::ObjectPtr< KdTree_verb_core_MeshIntersectionPoint_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< ::Dynamic> points, ::Dynamic distanceFunction);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~KdTree_verb_core_MeshIntersectionPoint_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("KdTree_verb_core_MeshIntersectionPoint",72,f1,db,8b); }

		::Array< ::Dynamic> points;
		 ::Dynamic distanceFunction;
		Dynamic distanceFunction_dyn() { return distanceFunction;}
		int dim;
		 ::verb::core::KdNode_verb_core_MeshIntersectionPoint root;
		 ::verb::core::KdNode_verb_core_MeshIntersectionPoint buildTree(::Array< ::Dynamic> points,int depth, ::verb::core::KdNode_verb_core_MeshIntersectionPoint parent);
		::Dynamic buildTree_dyn();

		::Array< ::Dynamic> nearest(::Array< Float > point,int maxNodes,Float maxDistance);
		::Dynamic nearest_dyn();

};

} // end namespace verb
} // end namespace core

#endif /* INCLUDED_verb_core_KdTree_verb_core_MeshIntersectionPoint */ 
