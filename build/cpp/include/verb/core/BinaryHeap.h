// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_core_BinaryHeap
#define INCLUDED_verb_core_BinaryHeap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(verb,core,BinaryHeap)
HX_DECLARE_CLASS2(verb,core,HeapElement)

namespace verb{
namespace core{


class HXCPP_CLASS_ATTRIBUTES BinaryHeap_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef BinaryHeap_obj OBJ_;
		BinaryHeap_obj();

	public:
		enum { _hx_ClassId = 0x4fea5a6b };

		void __construct( ::Dynamic scoreFunction);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.core.BinaryHeap")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.core.BinaryHeap"); }
		static ::hx::ObjectPtr< BinaryHeap_obj > __new( ::Dynamic scoreFunction);
		static ::hx::ObjectPtr< BinaryHeap_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic scoreFunction);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BinaryHeap_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BinaryHeap",ed,a9,95,dd); }

		::Array< ::Dynamic> content;
		 ::Dynamic scoreFunction;
		Dynamic scoreFunction_dyn() { return scoreFunction;}
		void push( ::verb::core::HeapElement element);
		::Dynamic push_dyn();

		 ::verb::core::HeapElement pop();
		::Dynamic pop_dyn();

		 ::verb::core::HeapElement peek();
		::Dynamic peek_dyn();

		void remove( ::verb::core::HeapElement node);
		::Dynamic remove_dyn();

		int size();
		::Dynamic size_dyn();

		void bubbleUp(int n);
		::Dynamic bubbleUp_dyn();

		void sinkDown(int n);
		::Dynamic sinkDown_dyn();

};

} // end namespace verb
} // end namespace core

#endif /* INCLUDED_verb_core_BinaryHeap */ 
