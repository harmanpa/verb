// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_core_HeapElement
#define INCLUDED_verb_core_HeapElement

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_0bfb9540fffe3df5_290_new)
HX_DECLARE_CLASS2(verb,core,HeapElement)

namespace verb{
namespace core{


class HXCPP_CLASS_ATTRIBUTES HeapElement_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef HeapElement_obj OBJ_;
		HeapElement_obj();

	public:
		enum { _hx_ClassId = 0x7ae5c092 };

		void __construct( ::Dynamic obj,Float value);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.core.HeapElement")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.core.HeapElement"); }

		inline static ::hx::ObjectPtr< HeapElement_obj > __new( ::Dynamic obj,Float value) {
			::hx::ObjectPtr< HeapElement_obj > __this = new HeapElement_obj();
			__this->__construct(obj,value);
			return __this;
		}

		inline static ::hx::ObjectPtr< HeapElement_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic obj,Float value) {
			HeapElement_obj *__this = (HeapElement_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(HeapElement_obj), true, "verb.core.HeapElement"));
			*(void **)__this = HeapElement_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_0bfb9540fffe3df5_290_new)
HXLINE( 291)		( ( ::verb::core::HeapElement)(__this) )->obj = obj;
HXLINE( 292)		( ( ::verb::core::HeapElement)(__this) )->value = value;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~HeapElement_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("HeapElement",d0,02,20,e3); }

		 ::Dynamic obj;
		Float value;
};

} // end namespace verb
} // end namespace core

#endif /* INCLUDED_verb_core_HeapElement */ 
