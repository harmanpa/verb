// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_core_MeshData
#define INCLUDED_verb_core_MeshData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_verb_core_SerializableBase
#include <verb/core/SerializableBase.h>
#endif
HX_DECLARE_CLASS2(verb,core,MeshData)
HX_DECLARE_CLASS2(verb,core,SerializableBase)

namespace verb{
namespace core{


class HXCPP_CLASS_ATTRIBUTES MeshData_obj : public  ::verb::core::SerializableBase_obj
{
	public:
		typedef  ::verb::core::SerializableBase_obj super;
		typedef MeshData_obj OBJ_;
		MeshData_obj();

	public:
		enum { _hx_ClassId = 0x0289ba01 };

		void __construct(::Array< ::Dynamic> faces,::Array< ::Dynamic> points,::Array< ::Dynamic> normals,::Array< ::Dynamic> uvs);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="verb.core.MeshData")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"verb.core.MeshData"); }
		static ::hx::ObjectPtr< MeshData_obj > __new(::Array< ::Dynamic> faces,::Array< ::Dynamic> points,::Array< ::Dynamic> normals,::Array< ::Dynamic> uvs);
		static ::hx::ObjectPtr< MeshData_obj > __alloc(::hx::Ctx *_hx_ctx,::Array< ::Dynamic> faces,::Array< ::Dynamic> points,::Array< ::Dynamic> normals,::Array< ::Dynamic> uvs);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MeshData_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MeshData",d7,82,17,a6); }

		static  ::verb::core::MeshData empty();
		static ::Dynamic empty_dyn();

		::Array< ::Dynamic> faces;
		::Array< ::Dynamic> points;
		::Array< ::Dynamic> normals;
		::Array< ::Dynamic> uvs;
};

} // end namespace verb
} // end namespace core

#endif /* INCLUDED_verb_core_MeshData */ 
