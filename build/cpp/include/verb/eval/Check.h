// Generated by Haxe 4.1.4
#ifndef INCLUDED_verb_eval_Check
#define INCLUDED_verb_eval_Check

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(verb,core,NurbsCurveData)
HX_DECLARE_CLASS2(verb,core,NurbsSurfaceData)
HX_DECLARE_CLASS2(verb,core,SerializableBase)
HX_DECLARE_CLASS2(verb,eval,Check)

namespace verb{
namespace eval{


class HXCPP_CLASS_ATTRIBUTES Check_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Check_obj OBJ_;
		Check_obj();

	public:
		enum { _hx_ClassId = 0x7ffcbb51 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="verb.eval.Check")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"verb.eval.Check"); }

		inline static ::hx::ObjectPtr< Check_obj > __new() {
			::hx::ObjectPtr< Check_obj > __this = new Check_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Check_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Check_obj *__this = (Check_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Check_obj), false, "verb.eval.Check"));
			*(void **)__this = Check_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Check_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Check",a8,08,e4,d8); }

		static bool isValidKnotVector(::Array< Float > vec,int degree);
		static ::Dynamic isValidKnotVector_dyn();

		static bool isNonDecreasing(::Array< Float > vec);
		static ::Dynamic isNonDecreasing_dyn();

		static  ::verb::core::NurbsCurveData isValidNurbsCurveData( ::verb::core::NurbsCurveData data);
		static ::Dynamic isValidNurbsCurveData_dyn();

		static  ::verb::core::NurbsSurfaceData isValidNurbsSurfaceData( ::verb::core::NurbsSurfaceData data);
		static ::Dynamic isValidNurbsSurfaceData_dyn();

};

} // end namespace verb
} // end namespace eval

#endif /* INCLUDED_verb_eval_Check */ 
