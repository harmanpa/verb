// Generated by Haxe 4.1.4
package verb.core;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Mesh extends haxe.lang.HxObject
{
	public Mesh(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Mesh()
	{
		//line 11 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		verb.core.Mesh.__hx_ctor_verb_core_Mesh(this);
	}
	
	
	protected static void __hx_ctor_verb_core_Mesh(verb.core.Mesh __hx_this)
	{
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector getTriangleNorm(haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> points, haxe.root.Array<java.lang.Object> tri)
	{
		//line 27 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector v0 = points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ));
		//line 27 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector v1 = points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ));
		//line 27 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector v2 = points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ));
		//line 27 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector u = verb.core.Vec.sub(v1, v0);
		//line 27 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector v = verb.core.Vec.sub(v2, v0);
		//line 27 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector n = verb.core.Vec.cross(u, v);
		//line 34 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		return verb.core.Vec.mul(( 1 / verb.core.Vec.norm(n) ), n);
	}
	
	
	public static verb.core.BoundingBox makeMeshAabb(verb.core.MeshData mesh, haxe.root.Array<java.lang.Object> faceIndices)
	{
		//line 52 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		verb.core.BoundingBox bb = new verb.core.BoundingBox(((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (null) ));
		//line 54 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		{
			//line 54 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			int _g = 0;
			//line 54 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			while (( _g < faceIndices.length ))
			{
				//line 54 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				int x = ((int) (haxe.lang.Runtime.toInt(faceIndices.__get(_g))) );
				//line 54 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				 ++ _g;
				//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				bb.add(mesh.points.__get(((int) (haxe.lang.Runtime.toInt(mesh.faces.__get(x).__get(0))) )));
				//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				bb.add(mesh.points.__get(((int) (haxe.lang.Runtime.toInt(mesh.faces.__get(x).__get(1))) )));
				//line 57 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				bb.add(mesh.points.__get(((int) (haxe.lang.Runtime.toInt(mesh.faces.__get(x).__get(2))) )));
			}
			
		}
		
		//line 60 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		return bb;
	}
	
	
	public static haxe.root.Array<java.lang.Object> sortTrianglesOnLongestAxis(verb.core.BoundingBox bb, verb.core.MeshData mesh, haxe.root.Array<java.lang.Object> faceIndices)
	{
		//line 78 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		int longAxis = bb.getLongestAxis();
		//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		haxe.root.Array<verb.core.Pair<java.lang.Object, java.lang.Object>> minCoordFaceMap = new haxe.root.Array<verb.core.Pair<java.lang.Object, java.lang.Object>>();
		//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		{
			//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			int _g = 0;
			//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			while (( _g < faceIndices.length ))
			{
				//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				int faceIndex = ((int) (haxe.lang.Runtime.toInt(faceIndices.__get(_g))) );
				//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				 ++ _g;
				//line 82 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				double tri_min = verb.core.Mesh.getMinCoordOnAxis(mesh.points, mesh.faces.__get(faceIndex), longAxis);
				//line 83 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				minCoordFaceMap.push(new verb.core.Pair<java.lang.Object, java.lang.Object>(tri_min, faceIndex));
			}
			
		}
		
		//line 86 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		minCoordFaceMap.sort(( (( verb.core.Mesh_sortTrianglesOnLongestAxis_86__Fun.__hx_current != null )) ? (verb.core.Mesh_sortTrianglesOnLongestAxis_86__Fun.__hx_current) : (verb.core.Mesh_sortTrianglesOnLongestAxis_86__Fun.__hx_current = ((verb.core.Mesh_sortTrianglesOnLongestAxis_86__Fun) (new verb.core.Mesh_sortTrianglesOnLongestAxis_86__Fun()) )) ));
		//line 93 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		haxe.root.Array<java.lang.Object> sortedFaceIndices = new haxe.root.Array<java.lang.Object>();
		//line 94 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		{
			//line 94 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			int _g1 = 0;
			//line 94 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			int _g2 = minCoordFaceMap.length;
			//line 94 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			while (( _g1 < _g2 ))
			{
				//line 94 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				int i = _g1++;
				//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				sortedFaceIndices.push(((int) (haxe.lang.Runtime.toInt(minCoordFaceMap.__get(i).item1)) ));
			}
			
		}
		
		//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		return sortedFaceIndices;
	}
	
	
	public static double getMinCoordOnAxis(haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> points, haxe.root.Array<java.lang.Object> tri, int axis)
	{
		//line 113 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		try 
		{
			//line 115 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			double min = java.lang.Double.POSITIVE_INFINITY;
			//line 117 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			{
				//line 117 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					double coord = ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ))) ).getEntry(((int) (axis) ));
					//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					if (( coord < min )) 
					{
						//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						min = coord;
					}
					
				}
				
				//line 117 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					double coord1 = ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ))) ).getEntry(((int) (axis) ));
					//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					if (( coord1 < min )) 
					{
						//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						min = coord1;
					}
					
				}
				
				//line 117 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					double coord2 = ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ))) ).getEntry(((int) (axis) ));
					//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					if (( coord2 < min )) 
					{
						//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						min = coord2;
					}
					
				}
				
			}
			
			//line 122 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			return min;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 113 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector getTriangleCentroid(haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> points, haxe.root.Array<java.lang.Object> tri)
	{
		//line 137 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		try 
		{
			//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			haxe.root.Array<java.lang.Object> centroid = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (0.0) ), ((java.lang.Object) (0.0) ), ((java.lang.Object) (0.0) )});
			//line 141 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			{
				//line 142 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index1 = 0;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr1 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index1, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index1))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ))) ).getEntry(((int) (0) )) )))) );
					}
					
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index2 = 1;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr2 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index2, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index2))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ))) ).getEntry(((int) (1) )) )))) );
					}
					
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index3 = 2;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr3 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index3, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index3))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ))) ).getEntry(((int) (2) )) )))) );
					}
					
				}
				
				//line 142 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index4 = 0;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr4 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index4, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index4))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ))) ).getEntry(((int) (0) )) )))) );
					}
					
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index5 = 1;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr5 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index5, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index5))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ))) ).getEntry(((int) (1) )) )))) );
					}
					
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index6 = 2;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr6 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index6, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index6))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ))) ).getEntry(((int) (2) )) )))) );
					}
					
				}
				
				//line 142 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index7 = 0;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr7 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index7, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index7))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ))) ).getEntry(((int) (0) )) )))) );
					}
					
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index8 = 1;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr8 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index8, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index8))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ))) ).getEntry(((int) (1) )) )))) );
					}
					
					//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					{
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						int __temp_index9 = 2;
						//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
						double __temp_expr9 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index9, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index9))) ) + ((org.apache.commons.math3.linear.ArrayRealVector) (points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ))) ).getEntry(((int) (2) )) )))) );
					}
					
				}
				
			}
			
			//line 147 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			{
				//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					int __temp_index10 = 0;
					//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					double __temp_expr10 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index10, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index10))) ) / 3 )))) );
				}
				
				//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					int __temp_index11 = 1;
					//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					double __temp_expr11 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index11, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index11))) ) / 3 )))) );
				}
				
				//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
				{
					//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					int __temp_index12 = 2;
					//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
					double __temp_expr12 = ((double) (haxe.lang.Runtime.toDouble(centroid.__set(__temp_index12, ( ((double) (haxe.lang.Runtime.toDouble(centroid.__get(__temp_index12))) ) / 3 )))) );
				}
				
			}
			
			//line 151 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			return verb.core._Data.Vector_Impl_.fromArray(centroid);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 137 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector triangleUVFromPoint(verb.core.MeshData mesh, int faceIndex, org.apache.commons.math3.linear.ArrayRealVector f)
	{
		//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		haxe.root.Array<java.lang.Object> tri = mesh.faces.__get(faceIndex);
		//line 170 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector p1 = mesh.points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ));
		//line 171 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector p2 = mesh.points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ));
		//line 172 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector p3 = mesh.points.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ));
		//line 174 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector uv1 = mesh.uvs.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(0))) ));
		//line 175 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector uv2 = mesh.uvs.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(1))) ));
		//line 176 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector uv3 = mesh.uvs.__get(((int) (haxe.lang.Runtime.toInt(tri.__get(2))) ));
		//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector f1 = verb.core.Vec.sub(p1, f);
		//line 179 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector f2 = verb.core.Vec.sub(p2, f);
		//line 180 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		org.apache.commons.math3.linear.ArrayRealVector f3 = verb.core.Vec.sub(p3, f);
		//line 183 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		double a = verb.core.Vec.norm(verb.core.Vec.cross(verb.core.Vec.sub(p1, p2), verb.core.Vec.sub(p1, p3)));
		//line 184 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		double a1 = ( verb.core.Vec.norm(verb.core.Vec.cross(f2, f3)) / a );
		//line 185 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		double a2 = ( verb.core.Vec.norm(verb.core.Vec.cross(f3, f1)) / a );
		//line 186 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		double a3 = ( verb.core.Vec.norm(verb.core.Vec.cross(f1, f2)) / a );
		//line 189 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Mesh.hx"
		return verb.core.Vec.add(verb.core.Vec.mul(a1, uv1), verb.core.Vec.add(verb.core.Vec.mul(a2, uv2), verb.core.Vec.mul(a3, uv3)));
	}
	
	
}


