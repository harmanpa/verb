// Generated by Haxe 4.1.4
package verb.core;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Trig extends haxe.lang.HxObject
{
	public Trig(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Trig()
	{
		//line 11 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		verb.core.Trig.__hx_ctor_verb_core_Trig(this);
	}
	
	
	protected static void __hx_ctor_verb_core_Trig(verb.core.Trig __hx_this)
	{
	}
	
	
	public static boolean isPointInPlane(org.apache.commons.math3.linear.ArrayRealVector pt, verb.core.Plane p, double tol)
	{
		//line 14 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		return ( java.lang.Math.abs(verb.core.Vec.dot(verb.core.Vec.sub(pt, p.origin), p.normal)) < tol );
	}
	
	
	public static double distToSegment(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b, org.apache.commons.math3.linear.ArrayRealVector c)
	{
		//line 18 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		java.lang.Object res = verb.core.Trig.segmentClosestPoint(b, a, c, 0.0, 1.0);
		//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		return verb.core.Vec.dist(b, ((org.apache.commons.math3.linear.ArrayRealVector) (haxe.lang.Runtime.getField(res, "pt", true)) ));
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector rayClosestPoint(org.apache.commons.math3.linear.ArrayRealVector pt, org.apache.commons.math3.linear.ArrayRealVector o, org.apache.commons.math3.linear.ArrayRealVector r)
	{
		//line 35 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector o2pt = verb.core.Vec.sub(pt, o);
		//line 35 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		double do2ptr = verb.core.Vec.dot(o2pt, r);
		//line 35 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector proj = verb.core.Vec.add(o, verb.core.Vec.mul(do2ptr, r));
		//line 39 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		return proj;
	}
	
	
	public static double distToRay(org.apache.commons.math3.linear.ArrayRealVector pt, org.apache.commons.math3.linear.ArrayRealVector o, org.apache.commons.math3.linear.ArrayRealVector r)
	{
		//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector d = verb.core.Trig.rayClosestPoint(pt, o, r);
		//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector dif = verb.core.Vec.sub(d, pt);
		//line 58 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		return verb.core.Vec.norm(dif);
	}
	
	
	public static boolean threePointsAreFlat(org.apache.commons.math3.linear.ArrayRealVector p1, org.apache.commons.math3.linear.ArrayRealVector p2, org.apache.commons.math3.linear.ArrayRealVector p3, double tol)
	{
		//line 87 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector p2mp1 = verb.core.Vec.sub(p2, p1);
		//line 87 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector p3mp1 = verb.core.Vec.sub(p3, p1);
		//line 87 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector norm = verb.core.Vec.cross(p2mp1, p3mp1);
		//line 87 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		double area = verb.core.Vec.dot(norm, norm);
		//line 92 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		return ( area < tol );
	}
	
	
	public static java.lang.Object segmentClosestPoint(org.apache.commons.math3.linear.ArrayRealVector pt, org.apache.commons.math3.linear.ArrayRealVector segpt0, org.apache.commons.math3.linear.ArrayRealVector segpt1, double u0, double u1)
	{
		//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector dif = verb.core.Vec.sub(segpt1, segpt0);
		//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		double l = verb.core.Vec.norm(dif);
		//line 115 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		if (( l < verb.core.Constants.EPSILON )) 
		{
			//line 116 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"pt"}, new java.lang.Object[]{segpt0}, new java.lang.String[]{"u"}, new double[]{((double) (u0) )});
		}
		
		//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector o = segpt0;
		//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector r = verb.core.Vec.mul(( 1 / l ), dif);
		//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		org.apache.commons.math3.linear.ArrayRealVector o2pt = verb.core.Vec.sub(pt, o);
		//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		double do2ptr = verb.core.Vec.dot(o2pt, r);
		//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		if (( do2ptr < 0 )) 
		{
			//line 125 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"pt"}, new java.lang.Object[]{segpt0}, new java.lang.String[]{"u"}, new double[]{((double) (u0) )});
		}
		else
		{
			//line 126 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
			if (( do2ptr > l )) 
			{
				//line 127 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
				return new haxe.lang.DynamicObject(new java.lang.String[]{"pt"}, new java.lang.Object[]{segpt1}, new java.lang.String[]{"u"}, new double[]{((double) (u1) )});
			}
			
		}
		
		//line 130 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
		{
			//line 130 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
			org.apache.commons.math3.linear.ArrayRealVector __temp_odecl1 = verb.core.Vec.add(o, verb.core.Vec.mul(do2ptr, r));
			//line 130 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Trig.hx"
			return new haxe.lang.DynamicObject(new java.lang.String[]{"pt"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"u"}, new double[]{((double) (( u0 + ( ( (( u1 - u0 )) * do2ptr ) / l ) )) )});
		}
		
	}
	
	
}


