// Generated by Haxe 4.1.4
package verb.core;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Vec extends haxe.lang.HxObject
{
	public Vec(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Vec()
	{
		//line 14 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		verb.core.Vec.__hx_ctor_verb_core_Vec(this);
	}
	
	
	protected static void __hx_ctor_verb_core_Vec(verb.core.Vec __hx_this)
	{
	}
	
	
	public static double angleBetween(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 17 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return java.lang.Math.acos(( verb.core.Vec.dot(a, b) / (( verb.core.Vec.norm(a) * verb.core.Vec.norm(b) )) ));
	}
	
	
	public static double positiveAngleBetween(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b, org.apache.commons.math3.linear.ArrayRealVector n)
	{
		//line 21 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		org.apache.commons.math3.linear.ArrayRealVector nab = verb.core.Vec.cross(a, b);
		//line 23 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double al = verb.core.Vec.norm(a);
		//line 24 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double bl = verb.core.Vec.norm(b);
		//line 25 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double abl = ( al * bl );
		//line 26 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double adb = verb.core.Vec.dot(a, b);
		//line 28 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double sina = ( verb.core.Vec.norm(nab) / abl );
		//line 29 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double cosa = ( adb / abl );
		//line 31 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double w = java.lang.Math.atan2(sina, cosa);
		//line 32 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double s = verb.core.Vec.dot(n, nab);
		//line 34 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( java.lang.Math.abs(s) < verb.core.Constants.EPSILON )) 
		{
			//line 34 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return w;
		}
		
		//line 36 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( s > 0 )) 
		{
			//line 36 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return w;
		}
		else
		{
			//line 36 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return  - (w) ;
		}
		
	}
	
	
	public static double signedAngleBetween(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b, org.apache.commons.math3.linear.ArrayRealVector n)
	{
		//line 40 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		org.apache.commons.math3.linear.ArrayRealVector nab = verb.core.Vec.cross(a, b);
		//line 42 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double al = verb.core.Vec.norm(a);
		//line 43 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double bl = verb.core.Vec.norm(b);
		//line 44 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double abl = ( al * bl );
		//line 45 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double adb = verb.core.Vec.dot(a, b);
		//line 47 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double sina = ( verb.core.Vec.norm(nab) / abl );
		//line 48 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double cosa = ( adb / abl );
		//line 50 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double w = java.lang.Math.atan2(sina, cosa);
		//line 51 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double s = verb.core.Vec.dot(n, nab);
		//line 53 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( s > 0.0 )) 
		{
			//line 53 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return w;
		}
		else
		{
			//line 53 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return ( ( 2 * java.lang.Math.PI ) - w );
		}
		
	}
	
	
	public static double angleBetweenNormalized2d(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 57 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			double perpDot = ( ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (0) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (1) )) ) - ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (1) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (0) )) ) );
			//line 58 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return java.lang.Math.atan2(perpDot, verb.core.Vec.dot(a, b));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static double domain(org.apache.commons.math3.linear.ArrayRealVector a)
	{
		//line 62 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 62 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getDimension() - 1 )) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (0) )) );
		}
		catch (java.lang.Throwable typedException)
		{
			//line 61 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector range(int max)
	{
		//line 66 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<java.lang.Object> l = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 67 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double f = 0.0;
		//line 68 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 68 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 0;
			//line 68 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = max;
			//line 68 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 68 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 69 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				l.push(f);
				//line 70 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				f += 1.0;
			}
			
		}
		
		//line 72 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core._Data.Vector_Impl_.fromArray(l);
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector span(double min, double max, double step)
	{
		//line 79 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( step < verb.core.Constants.EPSILON )) 
		{
			//line 79 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{}));
		}
		
		//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( ( min > max ) && ( step > 0.0 ) )) 
		{
			//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{}));
		}
		
		//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( ( max > min ) && ( step < 0.0 ) )) 
		{
			//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{}));
		}
		
		//line 83 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<java.lang.Object> l = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 84 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double cur = min;
		//line 86 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		while (( cur <= max ))
		{
			//line 87 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			l.push(cur);
			//line 88 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			cur += step;
		}
		
		//line 91 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core._Data.Vector_Impl_.fromArray(l);
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector neg(org.apache.commons.math3.linear.ArrayRealVector arr)
	{
		//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> out = new haxe.root.Array<java.lang.Object>();
			//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = ((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getDimension();
				//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					out.push( - (((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getEntry(((int) (i) ))) );
				}
				
			}
			
			//line 95 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(out);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 94 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static double min(org.apache.commons.math3.linear.ArrayRealVector arr)
	{
		//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			double out = java.lang.Double.POSITIVE_INFINITY;
			//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = ((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getDimension();
				//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					out = java.lang.Math.min(out, ((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getEntry(((int) (i) )));
				}
				
			}
			
			//line 99 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return out;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static double max(org.apache.commons.math3.linear.ArrayRealVector arr)
	{
		//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			double out = java.lang.Double.NEGATIVE_INFINITY;
			//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = ((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getDimension();
				//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					out = java.lang.Math.max(out, ((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getEntry(((int) (i) )));
				}
				
			}
			
			//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return out;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 102 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static boolean all(haxe.root.Array<java.lang.Object> arr)
	{
		//line 107 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.root.Lambda.fold(((java.lang.Object) (arr) ), ((haxe.lang.Function) (( (( verb.core.Vec_all_107__Fun.__hx_current != null )) ? (verb.core.Vec_all_107__Fun.__hx_current) : (verb.core.Vec_all_107__Fun.__hx_current = ((verb.core.Vec_all_107__Fun) (new verb.core.Vec_all_107__Fun()) )) )) ), ((java.lang.Object) (true) ))) ));
	}
	
	
	public static haxe.root.Array<java.lang.Object> finite(org.apache.commons.math3.linear.ArrayRealVector arr)
	{
		//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> out = new haxe.root.Array<java.lang.Object>();
			//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = ((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getDimension();
				//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					out.push(haxe.lang.Runtime.isFinite(((org.apache.commons.math3.linear.ArrayRealVector) (arr) ).getEntry(((int) (i) ))));
				}
				
			}
			
			//line 111 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return out;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 110 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector onRay(org.apache.commons.math3.linear.ArrayRealVector origin, org.apache.commons.math3.linear.ArrayRealVector dir, double u)
	{
		//line 115 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core.Vec.add(origin, verb.core.Vec.mul(u, dir));
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector lerp(double i, org.apache.commons.math3.linear.ArrayRealVector u, org.apache.commons.math3.linear.ArrayRealVector v)
	{
		//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core.Vec.add(verb.core.Vec.mul(i, u), verb.core.Vec.mul(( 1.0 - i ), v));
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector normalized(org.apache.commons.math3.linear.ArrayRealVector arr)
	{
		//line 123 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core.Vec.div(arr, verb.core.Vec.norm(arr));
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector cross(org.apache.commons.math3.linear.ArrayRealVector u, org.apache.commons.math3.linear.ArrayRealVector v)
	{
		//line 127 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 127 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( ( ((org.apache.commons.math3.linear.ArrayRealVector) (u) ).getEntry(((int) (1) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (v) ).getEntry(((int) (2) )) ) - ( ((org.apache.commons.math3.linear.ArrayRealVector) (u) ).getEntry(((int) (2) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (v) ).getEntry(((int) (1) )) ) )) ), ((java.lang.Object) (( ( ((org.apache.commons.math3.linear.ArrayRealVector) (u) ).getEntry(((int) (2) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (v) ).getEntry(((int) (0) )) ) - ( ((org.apache.commons.math3.linear.ArrayRealVector) (u) ).getEntry(((int) (0) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (v) ).getEntry(((int) (2) )) ) )) ), ((java.lang.Object) (( ( ((org.apache.commons.math3.linear.ArrayRealVector) (u) ).getEntry(((int) (0) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (v) ).getEntry(((int) (1) )) ) - ( ((org.apache.commons.math3.linear.ArrayRealVector) (u) ).getEntry(((int) (1) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (v) ).getEntry(((int) (0) )) ) )) )}));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 126 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static double dist(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 131 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core.Vec.norm(verb.core.Vec.sub(a, b));
	}
	
	
	public static double distSquared(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 135 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core.Vec.normSquared(verb.core.Vec.sub(a, b));
	}
	
	
	public static double sum(org.apache.commons.math3.linear.ArrayRealVector a)
	{
		//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			double out = ((double) (0) );
			//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getDimension();
				//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					out = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) + out );
				}
				
			}
			
			//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return out;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 138 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector addAll(java.lang.Object a)
	{
		//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		java.lang.Object i = ((java.lang.Object) (haxe.lang.Runtime.callField(a, "iterator", null)) );
		//line 144 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if ( ! (haxe.lang.Runtime.toBool(((java.lang.Boolean) (haxe.lang.Runtime.callField(i, "hasNext", null)) ))) ) 
		{
			//line 144 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return null;
		}
		
		//line 146 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		int f = verb.core._Data.Vector_Impl_.get_length(((org.apache.commons.math3.linear.ArrayRealVector) (haxe.lang.Runtime.callField(i, "next", null)) ));
		//line 148 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return ((org.apache.commons.math3.linear.ArrayRealVector) (haxe.root.Lambda.fold(((java.lang.Object) (a) ), ((haxe.lang.Function) (( (( verb.core.Vec_addAll_148__Fun.__hx_current != null )) ? (verb.core.Vec_addAll_148__Fun.__hx_current) : (verb.core.Vec_addAll_148__Fun.__hx_current = ((verb.core.Vec_addAll_148__Fun) (new verb.core.Vec_addAll_148__Fun()) )) )) ), ((java.lang.Object) (verb.core._Data.Vector_Impl_.fromArray(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (verb.core.Vec.rep(((int) (f) ), ((java.lang.Object) (0.0) ))) )) ))) ))) );
	}
	
	
	public static void addAllMutate(haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> a)
	{
		//line 152 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		org.apache.commons.math3.linear.ArrayRealVector f = a.__get(0);
		//line 153 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 153 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 1;
			//line 153 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = a.length;
			//line 153 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 153 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 154 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				verb.core.Vec.addMutate(f, a.__get(i));
			}
			
		}
		
	}
	
	
	public static void addMulMutate(org.apache.commons.math3.linear.ArrayRealVector a, double s, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 158 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 158 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 0;
			//line 158 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = verb.core._Data.Vector_Impl_.get_length(a);
			//line 158 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 158 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 159 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				{
					//line 159 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					double v = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) + ( s * ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) ) );
					//line 159 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (a) ).setEntry(((int) (i) ), ((double) (v) ));
				}
				
			}
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 157 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static void subMulMutate(org.apache.commons.math3.linear.ArrayRealVector a, double s, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 0;
			//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = verb.core._Data.Vector_Impl_.get_length(a);
			//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 164 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				{
					//line 164 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					double v = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) - ( s * ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) ) );
					//line 164 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (a) ).setEntry(((int) (i) ), ((double) (v) ));
				}
				
			}
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 162 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static void addMutate(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 0;
			//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = verb.core._Data.Vector_Impl_.get_length(a);
			//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 169 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				{
					//line 169 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					double v = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) + ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) );
					//line 169 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (a) ).setEntry(((int) (i) ), ((double) (v) ));
				}
				
			}
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 167 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static void subMutate(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 173 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 173 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 0;
			//line 173 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = verb.core._Data.Vector_Impl_.get_length(a);
			//line 173 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 173 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 174 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				{
					//line 174 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					double v = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) );
					//line 174 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (a) ).setEntry(((int) (i) ), ((double) (v) ));
				}
				
			}
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 172 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static void mulMutate(double a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g = 0;
			//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = verb.core._Data.Vector_Impl_.get_length(b);
			//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g < _g1 ))
			{
				//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g++;
				//line 179 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				{
					//line 179 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					double v = ( ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) * a );
					//line 179 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (b) ).setEntry(((int) (i) ), ((double) (v) ));
				}
				
			}
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 177 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static double norm(org.apache.commons.math3.linear.ArrayRealVector a)
	{
		//line 183 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		double norm2 = verb.core.Vec.normSquared(a);
		//line 184 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		if (( norm2 != 0.0 )) 
		{
			//line 184 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return java.lang.Math.sqrt(norm2);
		}
		else
		{
			//line 184 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return norm2;
		}
		
	}
	
	
	public static double normSquared(org.apache.commons.math3.linear.ArrayRealVector a)
	{
		//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			double out = ((double) (0) );
			//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getDimension();
				//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					out = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) + ( out * out ) );
				}
				
			}
			
			//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return out;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 187 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static <T> haxe.root.Array<T> rep(int num, T ele)
	{
		//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<T> _g = new haxe.root.Array<T>(( (T[]) (new java.lang.Object[] {}) ));
		//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = 0;
			//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g2 = num;
			//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g1 < _g2 ))
			{
				//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g1++;
				//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				_g.push(ele);
			}
			
		}
		
		//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return _g;
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector fill(int num, double ele)
	{
		//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<java.lang.Object> _g = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = 0;
			//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g2 = num;
			//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g1 < _g2 ))
			{
				//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g1++;
				//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				_g.push(ele);
			}
			
		}
		
		//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core._Data.Vector_Impl_.fromArray(_g);
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector zeros1d(int rows)
	{
		//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<java.lang.Object> _g = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
		//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = 0;
			//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g2 = rows;
			//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g1 < _g2 ))
			{
				//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g1++;
				//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				_g.push(0.0);
			}
			
		}
		
		//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return verb.core._Data.Vector_Impl_.fromArray(_g);
	}
	
	
	public static haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> zeros2d(int rows, int cols)
	{
		//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> _g = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>(new org.apache.commons.math3.linear.ArrayRealVector[]{});
		//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = 0;
			//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g2 = rows;
			//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g1 < _g2 ))
			{
				//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g1++;
				//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				_g.push(verb.core.Vec.zeros1d(cols));
			}
			
		}
		
		//line 204 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return _g;
	}
	
	
	public static haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> zeros3d(int rows, int cols, int depth)
	{
		//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> _g = new haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>(new haxe.root.Array[]{});
		//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		{
			//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g1 = 0;
			//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int _g2 = rows;
			//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( _g1 < _g2 ))
			{
				//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int i = _g1++;
				//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				_g.push(verb.core.Vec.zeros2d(cols, depth));
			}
			
		}
		
		//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		return _g;
	}
	
	
	public static double dot(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 211 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 212 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			double sum = ((double) (0) );
			//line 213 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 213 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 213 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = verb.core._Data.Vector_Impl_.get_length(a);
				//line 213 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 213 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 214 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					sum += ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) * ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) );
				}
				
			}
			
			//line 216 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return sum;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 211 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector add(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> _g = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = 0;
				//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g2 = verb.core._Data.Vector_Impl_.get_length(a);
				//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g1 < _g2 ))
				{
					//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g1++;
					//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					_g.push(( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) + ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) ));
				}
				
			}
			
			//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(_g);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 219 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector mul(double a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> _g = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = 0;
				//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g2 = verb.core._Data.Vector_Impl_.get_length(b);
				//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g1 < _g2 ))
				{
					//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g1++;
					//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					_g.push(( a * ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) ));
				}
				
			}
			
			//line 224 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(_g);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 223 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector div(org.apache.commons.math3.linear.ArrayRealVector a, double b)
	{
		//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> _g = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = 0;
				//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g2 = verb.core._Data.Vector_Impl_.get_length(a);
				//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g1 < _g2 ))
				{
					//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g1++;
					//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					_g.push(( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) / b ));
				}
				
			}
			
			//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(_g);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 227 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector sub(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> _g = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = 0;
				//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g2 = verb.core._Data.Vector_Impl_.get_length(a);
				//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g1 < _g2 ))
				{
					//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g1++;
					//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					_g.push(( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (i) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (i) )) ));
				}
				
			}
			
			//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(_g);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 231 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static boolean isZero(org.apache.commons.math3.linear.ArrayRealVector vec)
	{
		//line 235 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 237 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			{
				//line 237 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g = 0;
				//line 237 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				int _g1 = verb.core._Data.Vector_Impl_.get_length(vec);
				//line 237 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				while (( _g < _g1 ))
				{
					//line 237 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					int i = _g++;
					//line 238 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					if (( java.lang.Math.abs(((org.apache.commons.math3.linear.ArrayRealVector) (vec) ).getEntry(((int) (i) ))) > verb.core.Constants.TOLERANCE )) 
					{
						//line 238 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
						return false;
					}
					
				}
				
			}
			
			//line 241 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return true;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 235 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector sortedSetUnion(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 244 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 246 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> merged = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 248 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int ai = 0;
			//line 249 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int bi = 0;
			//line 250 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( ( ai < verb.core._Data.Vector_Impl_.get_length(a) ) || ( bi < verb.core._Data.Vector_Impl_.get_length(b) ) ))
			{
				//line 252 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				if (( ai >= verb.core._Data.Vector_Impl_.get_length(a) )) 
				{
					//line 253 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					merged.push(((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (bi) )));
					//line 254 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ bi;
					//line 255 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					continue;
				}
				else
				{
					//line 256 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					if (( bi >= verb.core._Data.Vector_Impl_.get_length(b) )) 
					{
						//line 257 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
						merged.push(((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )));
						//line 258 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
						 ++ ai;
						//line 259 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
						continue;
					}
					
				}
				
				//line 262 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				double diff = ( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (bi) )) );
				//line 264 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				if (( java.lang.Math.abs(diff) < verb.core.Constants.EPSILON )) 
				{
					//line 265 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					merged.push(((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )));
					//line 266 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ ai;
					//line 267 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ bi;
					//line 268 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					continue;
				}
				
				//line 271 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				if (( diff > 0.0 )) 
				{
					//line 273 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					merged.push(((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (bi) )));
					//line 274 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ bi;
					//line 275 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					continue;
				}
				
				//line 279 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				merged.push(((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )));
				//line 280 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				 ++ ai;
			}
			
			//line 284 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(merged);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 244 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector sortedSetSub(org.apache.commons.math3.linear.ArrayRealVector a, org.apache.commons.math3.linear.ArrayRealVector b)
	{
		//line 288 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
		try 
		{
			//line 290 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			haxe.root.Array<java.lang.Object> result = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 292 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int ai = 0;
			//line 293 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			int bi = 0;
			//line 294 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			while (( ai < verb.core._Data.Vector_Impl_.get_length(a) ))
			{
				//line 296 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				if (( bi >= verb.core._Data.Vector_Impl_.get_length(b) )) 
				{
					//line 297 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					result.push(((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )));
					//line 298 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ ai;
					//line 299 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					continue;
				}
				
				//line 302 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				if (( java.lang.Math.abs(( ((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (b) ).getEntry(((int) (bi) )) )) < verb.core.Constants.EPSILON )) 
				{
					//line 303 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ ai;
					//line 304 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					 ++ bi;
					//line 305 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
					continue;
				}
				
				//line 308 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				result.push(((org.apache.commons.math3.linear.ArrayRealVector) (a) ).getEntry(((int) (ai) )));
				//line 309 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
				 ++ ai;
			}
			
			//line 312 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			return verb.core._Data.Vector_Impl_.fromArray(result);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 288 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Vec.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
}


