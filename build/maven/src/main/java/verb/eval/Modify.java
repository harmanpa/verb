// Generated by Haxe 4.1.4
package verb.eval;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Modify extends haxe.lang.HxObject
{
	public Modify(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Modify()
	{
		//line 26 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		verb.eval.Modify.__hx_ctor_verb_eval_Modify(this);
	}
	
	
	protected static void __hx_ctor_verb_eval_Modify(verb.eval.Modify __hx_this)
	{
	}
	
	
	public static verb.core.NurbsCurveData curveReverse(verb.core.NurbsCurveData curve)
	{
		//line 39 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		return new verb.core.NurbsCurveData(curve.degree, verb.eval.Modify.knotsReverse(curve.knots), ((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (verb.core.ArrayExtensions.reversed(((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (curve.controlPoints) ))) ));
	}
	
	
	public static verb.core.NurbsSurfaceData surfaceReverse(verb.core.NurbsSurfaceData surface, java.lang.Object useV)
	{
		//line 53 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		boolean useV1 = ( (haxe.lang.Runtime.eq(useV, null)) ? (false) : (haxe.lang.Runtime.toBool(((java.lang.Boolean) (useV) ))) );
		//line 54 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		if (useV1) 
		{
			//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int surface1 = surface.degreeU;
			//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int surface2 = surface.degreeV;
			//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector surface3 = surface.knotsU;
			//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector tmp = verb.eval.Modify.knotsReverse(surface.knotsV);
			//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> _g = new haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>(new haxe.root.Array[]{});
			//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = 0;
				//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> _g2 = surface.controlPoints;
				//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g1 < _g2.length ))
				{
					//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> row = _g2.__get(_g1);
					//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 ++ _g1;
					//line 56 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					_g.push(((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (verb.core.ArrayExtensions.reversed(((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (row) ))) ));
				}
				
			}
			
			//line 55 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsSurfaceData(surface1, surface2, surface3, tmp, _g);
		}
		
		//line 60 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		return new verb.core.NurbsSurfaceData(surface.degreeU, surface.degreeV, verb.eval.Modify.knotsReverse(surface.knotsU), surface.knotsV, ((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (verb.core.ArrayExtensions.reversed(((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (surface.controlPoints) ))) ));
	}
	
	
	public static org.apache.commons.math3.linear.ArrayRealVector knotsReverse(org.apache.commons.math3.linear.ArrayRealVector knots)
	{
		//line 74 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 75 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			double min = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (0) ));
			//line 76 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			double max = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getDimension() - 1 )) ));
			//line 78 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<java.lang.Object> l = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (min) )});
			//line 79 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int len = verb.core._Data.Vector_Impl_.get_length(knots);
			//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 1;
				//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = len;
				//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 80 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i = _g++;
					//line 81 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					l.push(( ((double) (haxe.lang.Runtime.toDouble(l.__get(( i - 1 )))) ) + (( ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( len - i )) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( ( len - i ) - 1 )) )) )) ));
				}
				
			}
			
			//line 84 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return verb.core._Data.Vector_Impl_.fromArray(l);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 74 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static haxe.root.Array<verb.core.NurbsCurveData> unifyCurveKnotVectors(haxe.root.Array<verb.core.NurbsCurveData> curves)
	{
		//line 97 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.lang.Function f = ((haxe.lang.Function) (new haxe.lang.Closure(verb.eval.Make.class, "clonedCurve")) );
			//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<verb.core.NurbsCurveData> ret = ((haxe.root.Array<verb.core.NurbsCurveData>) (((haxe.root.Array) (haxe.root.Array.alloc(((int) (curves.length) ))) )) );
			//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 0;
				//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = curves.length;
				//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i = _g++;
					//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					ret.__set(i, ((verb.core.NurbsCurveData) (f.__hx_invoke1_o(0.0, curves.__get(i))) ));
				}
				
			}
			
			//line 98 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			curves = ret;
			//line 100 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int maxDegree = ((int) (haxe.lang.Runtime.toInt(haxe.root.Lambda.fold(((java.lang.Object) (curves) ), ((haxe.lang.Function) (( (( verb.eval.Modify_unifyCurveKnotVectors_100__Fun.__hx_current != null )) ? (verb.eval.Modify_unifyCurveKnotVectors_100__Fun.__hx_current) : (verb.eval.Modify_unifyCurveKnotVectors_100__Fun.__hx_current = ((verb.eval.Modify_unifyCurveKnotVectors_100__Fun) (new verb.eval.Modify_unifyCurveKnotVectors_100__Fun()) )) )) ), ((java.lang.Object) (0) )))) );
			//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g2 = 0;
				//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g3 = curves.length;
				//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g2 < _g3 ))
				{
					//line 103 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i1 = _g2++;
					//line 104 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					if (( curves.__get(i1).degree < maxDegree )) 
					{
						//line 105 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						curves.__set(i1, verb.eval.Modify.curveElevateDegree(curves.__get(i1), maxDegree));
					}
					
				}
				
			}
			
			//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<verb.core.Interval<java.lang.Object>> _g4 = new haxe.root.Array<verb.core.Interval<java.lang.Object>>(new verb.core.Interval[]{});
			//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g5 = 0;
				//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g5 < curves.length ))
				{
					//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					verb.core.NurbsCurveData c = curves.__get(_g5);
					//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 ++ _g5;
					//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double tmp = ((org.apache.commons.math3.linear.ArrayRealVector) (c.knots) ).getEntry(((int) (0) ));
					//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					org.apache.commons.math3.linear.ArrayRealVector this1 = c.knots;
					//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					_g4.push(new verb.core.Interval<java.lang.Object>(tmp, this1.getEntry(((int) (( this1.getDimension() - 1 )) ))));
				}
				
			}
			
			//line 109 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<verb.core.Interval<java.lang.Object>> knotIntervals = _g4;
			//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g6 = 0;
				//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g7 = curves.length;
				//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g6 < _g7 ))
				{
					//line 112 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i2 = _g6++;
					//line 113 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double min = ((double) (haxe.lang.Runtime.toDouble(knotIntervals.__get(i2).min)) );
					//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					org.apache.commons.math3.linear.ArrayRealVector this2 = curves.__get(i2).knots;
					//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					haxe.root.Array<java.lang.Object> out = new haxe.root.Array<java.lang.Object>();
					//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g8 = 0;
						//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g9 = this2.getDimension();
						//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g8 < _g9 ))
						{
							//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int i3 = _g8++;
							//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							out.push(( this2.getEntry(((int) (i3) )) - min ));
						}
						
					}
					
					//line 114 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					curves.__get(i2).knots = verb.core._Data.Vector_Impl_.fromArray(out);
				}
				
			}
			
			//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<java.lang.Object> ret1 = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (haxe.root.Array.alloc(((int) (knotIntervals.length) ))) )) );
			//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g10 = 0;
				//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g11 = knotIntervals.length;
				//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g10 < _g11 ))
				{
					//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i4 = _g10++;
					//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					verb.core.Interval<java.lang.Object> x = knotIntervals.__get(i4);
					//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double __temp_expr1 = ((double) (haxe.lang.Runtime.toDouble(ret1.__set(i4, ( ((double) (haxe.lang.Runtime.toDouble(x.max)) ) - ((double) (haxe.lang.Runtime.toDouble(x.min)) ) )))) );
				}
				
			}
			
			//line 118 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<java.lang.Object> knotSpans = ret1;
			//line 119 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			double maxKnotSpan = ((double) (haxe.lang.Runtime.toDouble(haxe.root.Lambda.fold(((java.lang.Object) (knotSpans) ), ((haxe.lang.Function) (( (( verb.eval.Modify_unifyCurveKnotVectors_119__Fun.__hx_current != null )) ? (verb.eval.Modify_unifyCurveKnotVectors_119__Fun.__hx_current) : (verb.eval.Modify_unifyCurveKnotVectors_119__Fun.__hx_current = ((verb.eval.Modify_unifyCurveKnotVectors_119__Fun) (new verb.eval.Modify_unifyCurveKnotVectors_119__Fun()) )) )) ), ((java.lang.Object) (0.0) )))) );
			//line 122 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 122 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g12 = 0;
				//line 122 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g13 = curves.length;
				//line 122 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g12 < _g13 ))
				{
					//line 122 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i5 = _g12++;
					//line 123 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double scale = ( maxKnotSpan / ((double) (haxe.lang.Runtime.toDouble(knotSpans.__get(i5))) ) );
					//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					org.apache.commons.math3.linear.ArrayRealVector this3 = curves.__get(i5).knots;
					//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					haxe.root.Array<java.lang.Object> out1 = new haxe.root.Array<java.lang.Object>();
					//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g14 = 0;
						//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g15 = this3.getDimension();
						//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g14 < _g15 ))
						{
							//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int i6 = _g14++;
							//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							out1.push(( this3.getEntry(((int) (i6) )) * scale ));
						}
						
					}
					
					//line 124 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					curves.__get(i5).knots = verb.core._Data.Vector_Impl_.fromArray(out1);
				}
				
			}
			
			//line 128 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector mergedKnots = ((org.apache.commons.math3.linear.ArrayRealVector) (haxe.root.Lambda.fold(((java.lang.Object) (curves) ), ((haxe.lang.Function) (( (( verb.eval.Modify_unifyCurveKnotVectors_128__Fun.__hx_current != null )) ? (verb.eval.Modify_unifyCurveKnotVectors_128__Fun.__hx_current) : (verb.eval.Modify_unifyCurveKnotVectors_128__Fun.__hx_current = ((verb.eval.Modify_unifyCurveKnotVectors_128__Fun) (new verb.eval.Modify_unifyCurveKnotVectors_128__Fun()) )) )) ), ((java.lang.Object) (verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{}))) ))) );
			//line 131 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 131 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g16 = 0;
				//line 131 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g17 = curves.length;
				//line 131 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g16 < _g17 ))
				{
					//line 131 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i7 = _g16++;
					//line 132 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					org.apache.commons.math3.linear.ArrayRealVector rem = verb.core.Vec.sortedSetSub(mergedKnots, curves.__get(i7).knots);
					//line 133 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					if (( verb.core._Data.Vector_Impl_.get_length(rem) == 0 )) 
					{
						//line 134 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						curves.__set(i7, curves.__get(i7));
					}
					
					//line 136 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					curves.__set(i7, verb.eval.Modify.curveKnotRefine(curves.__get(i7), rem));
				}
				
			}
			
			//line 139 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return curves;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 97 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static int imin(int a, int b)
	{
		//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		if (( a < b )) 
		{
			//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return a;
		}
		else
		{
			//line 143 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return b;
		}
		
	}
	
	
	public static int imax(int a, int b)
	{
		//line 147 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		if (( a > b )) 
		{
			//line 147 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return a;
		}
		else
		{
			//line 147 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return b;
		}
		
	}
	
	
	public static verb.core.NurbsCurveData curveElevateDegree(verb.core.NurbsCurveData curve, int finalDegree)
	{
		//line 161 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			if (( finalDegree <= curve.degree )) 
			{
				//line 163 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				return curve;
			}
			
			//line 166 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int n = ( ( verb.core._Data.Vector_Impl_.get_length(curve.knots) - curve.degree ) - 2 );
			//line 167 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int newDegree = curve.degree;
			//line 168 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector knots = curve.knots;
			//line 169 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints = curve.controlPoints;
			//line 170 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int degreeInc = ( finalDegree - curve.degree );
			//line 172 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int dim = verb.core._Data.Vector_Impl_.get_length(curve.controlPoints.__get(0));
			//line 175 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> bezalfs = verb.core.Vec.zeros2d(( ( newDegree + degreeInc ) + 1 ), ( newDegree + 1 ));
			//line 176 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> bpts = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>(new org.apache.commons.math3.linear.ArrayRealVector[]{});
			//line 177 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> ebpts = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>(new org.apache.commons.math3.linear.ArrayRealVector[]{});
			//line 178 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> Nextbpts = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>(new org.apache.commons.math3.linear.ArrayRealVector[]{});
			//line 181 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int m = ( ( n + newDegree ) + 1 );
			//line 182 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int ph = finalDegree;
			//line 183 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int ph2 = ((int) (java.lang.Math.floor(( ((double) (ph) ) / 2 ))) );
			//line 186 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> Qw = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>(new org.apache.commons.math3.linear.ArrayRealVector[]{});
			//line 187 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<java.lang.Object> Uh = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
			//line 190 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			((org.apache.commons.math3.linear.ArrayRealVector) (bezalfs.__get(0)) ).setEntry(((int) (0) ), ((double) (1.0) ));
			//line 191 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			((org.apache.commons.math3.linear.ArrayRealVector) (bezalfs.__get(ph)) ).setEntry(((int) (newDegree) ), ((double) (1.0) ));
			//line 193 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 193 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 1;
				//line 193 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = ( ph2 + 1 );
				//line 193 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 193 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i = _g++;
					//line 194 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double inv = ( 1.0 / verb.core.Binomial.get(ph, i) );
					//line 195 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int mpi = verb.eval.Modify.imin(newDegree, i);
					//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g2 = verb.eval.Modify.imax(0, ( i - degreeInc ));
						//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g3 = ( mpi + 1 );
						//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g2 < _g3 ))
						{
							//line 196 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j = _g2++;
							//line 197 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							{
								//line 197 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								double v = ( ( inv * verb.core.Binomial.get(newDegree, j) ) * verb.core.Binomial.get(degreeInc, ( i - j )) );
								//line 197 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								((org.apache.commons.math3.linear.ArrayRealVector) (bezalfs.__get(i)) ).setEntry(((int) (j) ), ((double) (v) ));
							}
							
						}
						
					}
					
				}
				
			}
			
			//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g4 = ( ph2 + 1 );
				//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g5 = ph;
				//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g4 < _g5 ))
				{
					//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i1 = _g4++;
					//line 201 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int mpi1 = verb.eval.Modify.imin(newDegree, i1);
					//line 202 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 202 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g6 = verb.eval.Modify.imax(0, ( i1 - degreeInc ));
						//line 202 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g7 = ( mpi1 + 1 );
						//line 202 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g6 < _g7 ))
						{
							//line 202 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j1 = _g6++;
							//line 203 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							{
								//line 203 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								double v1 = ((org.apache.commons.math3.linear.ArrayRealVector) (bezalfs.__get(( ph - i1 ))) ).getEntry(((int) (( newDegree - j1 )) ));
								//line 203 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								((org.apache.commons.math3.linear.ArrayRealVector) (bezalfs.__get(i1)) ).setEntry(((int) (j1) ), ((double) (v1) ));
							}
							
						}
						
					}
					
				}
				
			}
			
			//line 206 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int mh = ph;
			//line 207 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int kind = ( ph + 1 );
			//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int r = -1;
			//line 209 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int a = newDegree;
			//line 210 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int b = ( newDegree + 1 );
			//line 211 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int cind = 1;
			//line 212 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			double ua = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (0) ));
			//line 213 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			Qw.__set(0, controlPoints.__get(0));
			//line 214 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 214 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g8 = 0;
				//line 214 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g9 = ( ph + 1 );
				//line 214 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g8 < _g9 ))
				{
					//line 214 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i2 = _g8++;
					//line 215 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double __temp_expr1 = ((double) (haxe.lang.Runtime.toDouble(Uh.__set(i2, ua))) );
				}
				
			}
			
			//line 217 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 217 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g10 = 0;
				//line 217 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g11 = ( newDegree + 1 );
				//line 217 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g10 < _g11 ))
				{
					//line 217 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i3 = _g10++;
					//line 218 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					bpts.__set(i3, controlPoints.__get(i3));
				}
				
			}
			
			//line 220 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			while (( b < m ))
			{
				//line 221 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int i4 = b;
				//line 222 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( ( b < m ) && ( ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (b) )) == ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( b + 1 )) )) ) ))
				{
					//line 223 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 ++ b;
				}
				
				//line 225 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int mul = ( ( b - i4 ) + 1 );
				//line 226 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int mh1 = ( ( mh + mul ) + degreeInc );
				//line 227 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				double ub = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (b) ));
				//line 228 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int oldr = r;
				//line 229 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				r = ( newDegree - mul );
				//line 231 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int lbz = ( (( oldr > 0 )) ? (((int) (java.lang.Math.floor(( ((double) ((( oldr + 2 ))) ) / 2 ))) )) : (1) );
				//line 232 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int rbz = ( (( r > 0 )) ? (((int) (java.lang.Math.floor(( ph - ( ((double) ((( r + 1 ))) ) / 2 ) ))) )) : (ph) );
				//line 233 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				if (( r > 0 )) 
				{
					//line 234 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double numer = ( ub - ua );
					//line 235 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					haxe.root.Array<java.lang.Object> alfs = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
					//line 236 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int k = newDegree;
					//line 237 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					while (( k > mul ))
					{
						//line 238 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double __temp_expr2 = ((double) (haxe.lang.Runtime.toDouble(alfs.__set(( ( k - mul ) - 1 ), ( numer / (( ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( a + k )) )) - ua )) )))) );
						//line 239 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						 -- k;
					}
					
					//line 241 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 241 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g12 = 1;
						//line 241 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g13 = ( r + 1 );
						//line 241 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g12 < _g13 ))
						{
							//line 241 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j2 = _g12++;
							//line 242 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int save = ( r - j2 );
							//line 243 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int s = ( mul + j2 );
							//line 244 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int k1 = newDegree;
							//line 245 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							while (( k1 >= s ))
							{
								//line 246 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								bpts.__set(k1, verb.core.Vec.add(verb.core.Vec.mul(((double) (haxe.lang.Runtime.toDouble(alfs.__get(( k1 - s )))) ), bpts.__get(k1)), verb.core.Vec.mul(( 1.0 - ((double) (haxe.lang.Runtime.toDouble(alfs.__get(( k1 - s )))) ) ), bpts.__get(( k1 - 1 )))));
								//line 247 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								 -- k1;
							}
							
							//line 249 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							Nextbpts.__set(save, bpts.__get(newDegree));
						}
						
					}
					
				}
				
				//line 253 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				{
					//line 253 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g14 = lbz;
					//line 253 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g15 = ( ph + 1 );
					//line 253 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					while (( _g14 < _g15 ))
					{
						//line 253 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int i5 = _g14++;
						//line 254 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						ebpts.__set(i5, verb.core.Vec.zeros1d(dim));
						//line 255 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int mpi2 = verb.eval.Modify.imin(newDegree, i5);
						//line 256 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						{
							//line 256 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int _g16 = verb.eval.Modify.imax(0, ( i5 - degreeInc ));
							//line 256 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int _g17 = ( mpi2 + 1 );
							//line 256 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							while (( _g16 < _g17 ))
							{
								//line 256 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								int j3 = _g16++;
								//line 257 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								ebpts.__set(i5, verb.core.Vec.add(ebpts.__get(i5), verb.core.Vec.mul(((org.apache.commons.math3.linear.ArrayRealVector) (bezalfs.__get(i5)) ).getEntry(((int) (j3) )), bpts.__get(j3))));
							}
							
						}
						
					}
					
				}
				
				//line 261 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				if (( oldr > 1 )) 
				{
					//line 262 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int first = ( kind - 2 );
					//line 263 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int last = kind;
					//line 264 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double den = ( ub - ua );
					//line 265 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double bet = ( (( ub - ((double) (haxe.lang.Runtime.toDouble(Uh.__get(( kind - 1 )))) ) )) / den );
					//line 266 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 266 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g18 = 1;
						//line 266 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g19 = oldr;
						//line 266 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g18 < _g19 ))
						{
							//line 266 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int tr = _g18++;
							//line 267 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int i6 = first;
							//line 268 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j4 = last;
							//line 269 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int kj = ( ( j4 - kind ) + 1 );
							//line 270 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							while (( ( j4 - i6 ) > tr ))
							{
								//line 271 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								if (( i6 < cind )) 
								{
									//line 272 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
									double alf = ( (( ub - ((double) (haxe.lang.Runtime.toDouble(Uh.__get(i6))) ) )) / (( ua - ((double) (haxe.lang.Runtime.toDouble(Uh.__get(i6))) ) )) );
									//line 273 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
									Qw.__set(i6, verb.core.Vec.lerp(alf, Qw.__get(i6), Qw.__get(( i6 - 1 ))));
								}
								
								//line 275 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								if (( j4 >= lbz )) 
								{
									//line 276 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
									if (( ( j4 - tr ) <= ( ( kind - ph ) + oldr ) )) 
									{
										//line 277 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
										double gam = ( (( ub - ((double) (haxe.lang.Runtime.toDouble(Uh.__get(( j4 - tr )))) ) )) / den );
										//line 278 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
										ebpts.__set(kj, verb.core.Vec.lerp(gam, ebpts.__get(kj), ebpts.__get(( kj + 1 ))));
									}
									
								}
								else
								{
									//line 281 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
									ebpts.__set(kj, verb.core.Vec.lerp(bet, ebpts.__get(kj), ebpts.__get(( kj + 1 ))));
								}
								
								//line 283 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								 ++ i6;
								//line 284 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								 -- j4;
								//line 285 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								 -- kj;
							}
							
							//line 287 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							 -- first;
							//line 288 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							 ++ last;
						}
						
					}
					
				}
				
				//line 292 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				if (( a != newDegree )) 
				{
					//line 293 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g20 = 0;
					//line 293 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g21 = ( ph - oldr );
					//line 293 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					while (( _g20 < _g21 ))
					{
						//line 293 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int i7 = _g20++;
						//line 294 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double __temp_expr3 = ((double) (haxe.lang.Runtime.toDouble(Uh.__set(kind, ua))) );
						//line 295 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						 ++ kind;
					}
					
				}
				
				//line 299 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				{
					//line 299 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g22 = lbz;
					//line 299 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g23 = ( rbz + 1 );
					//line 299 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					while (( _g22 < _g23 ))
					{
						//line 299 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int j5 = _g22++;
						//line 300 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						Qw.__set(cind, ebpts.__get(j5));
						//line 301 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						 ++ cind;
					}
					
				}
				
				//line 304 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				if (( b < m )) 
				{
					//line 305 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 305 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g24 = 0;
						//line 305 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g25 = r;
						//line 305 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g24 < _g25 ))
						{
							//line 305 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j6 = _g24++;
							//line 306 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							bpts.__set(j6, Nextbpts.__get(j6));
						}
						
					}
					
					//line 308 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 308 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g26 = r;
						//line 308 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g27 = ( newDegree + 1 );
						//line 308 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g26 < _g27 ))
						{
							//line 308 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j7 = _g26++;
							//line 309 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							bpts.__set(j7, controlPoints.__get(( ( b - newDegree ) + j7 )));
						}
						
					}
					
					//line 311 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					a = b;
					//line 312 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 ++ b;
					//line 313 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					ua = ub;
				}
				else
				{
					//line 316 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g28 = 0;
					//line 316 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g29 = ( ph + 1 );
					//line 316 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					while (( _g28 < _g29 ))
					{
						//line 316 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int i8 = _g28++;
						//line 317 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double __temp_expr4 = ((double) (haxe.lang.Runtime.toDouble(Uh.__set(( kind + i8 ), ub))) );
					}
					
				}
				
			}
			
			//line 188 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int nh = ( ( mh - ph ) - 1 );
			//line 323 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsCurveData(finalDegree, verb.core._Data.Vector_Impl_.fromArray(Uh), Qw);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 161 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static verb.core.NurbsSurfaceData rationalSurfaceTransform(verb.core.NurbsSurfaceData surface, haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> mat)
	{
		//line 337 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 339 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> pts = verb.eval.Eval.dehomogenize2d(surface.controlPoints);
			//line 341 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 341 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 0;
				//line 341 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = pts.length;
				//line 341 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 341 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i = _g++;
					//line 342 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 342 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g2 = 0;
						//line 342 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g3 = pts.__get(i).length;
						//line 342 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g2 < _g3 ))
						{
							//line 342 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int j = _g2++;
							//line 343 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							org.apache.commons.math3.linear.ArrayRealVector homoPt = pts.__get(i).__get(j);
							//line 344 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							{
								//line 344 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								homoPt = new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.RealVector) (((org.apache.commons.math3.linear.ArrayRealVector) (homoPt) ).append(((double) (1.0) ))) ));
								//line 344 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								((org.apache.commons.math3.linear.ArrayRealVector) (homoPt) ).getDimension();
							}
							
							//line 346 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> pts1 = pts.__get(i);
							//line 346 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							org.apache.commons.math3.linear.ArrayRealVector this1 = verb.core.Mat.dot(mat, homoPt);
							//line 346 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							java.lang.Object end = ( verb.core._Data.Vector_Impl_.get_length(homoPt) - 1 );
							//line 346 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							if (haxe.lang.Runtime.eq(end, null)) 
							{
								//line 346 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
								end = this1.getDimension();
							}
							
							//line 346 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							pts1.__set(j, verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.RealVector) (this1.getSubVector(((int) (0) ), ((int) (haxe.lang.Runtime.toInt(end)) ))) ))));
						}
						
					}
					
				}
				
			}
			
			//line 350 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsSurfaceData(surface.degreeU, surface.degreeV, verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.ArrayRealVector) (surface.knotsU) ))), verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.ArrayRealVector) (surface.knotsV) ))), verb.eval.Eval.homogenize2d(pts, verb.eval.Eval.weight2d(surface.controlPoints)));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 337 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static verb.core.NurbsCurveData rationalCurveTransform(verb.core.NurbsCurveData curve, haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> mat)
	{
		//line 364 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 366 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> pts = verb.eval.Eval.dehomogenize1d(curve.controlPoints);
			//line 368 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 368 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 0;
				//line 368 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = pts.length;
				//line 368 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 368 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i = _g++;
					//line 370 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					org.apache.commons.math3.linear.ArrayRealVector homoPt = pts.__get(i);
					//line 371 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 371 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						homoPt = new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.RealVector) (((org.apache.commons.math3.linear.ArrayRealVector) (homoPt) ).append(((double) (1.0) ))) ));
						//line 371 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						((org.apache.commons.math3.linear.ArrayRealVector) (homoPt) ).getDimension();
					}
					
					//line 373 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					org.apache.commons.math3.linear.ArrayRealVector this1 = verb.core.Mat.dot(mat, homoPt);
					//line 373 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					java.lang.Object end = ( verb.core._Data.Vector_Impl_.get_length(homoPt) - 1 );
					//line 373 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					if (haxe.lang.Runtime.eq(end, null)) 
					{
						//line 373 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						end = this1.getDimension();
					}
					
					//line 373 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					pts.__set(i, verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.RealVector) (this1.getSubVector(((int) (0) ), ((int) (haxe.lang.Runtime.toInt(end)) ))) ))));
				}
				
			}
			
			//line 376 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsCurveData(curve.degree, verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.ArrayRealVector) (curve.knots) ))), verb.eval.Eval.homogenize1d(pts, verb.eval.Eval.weight1d(curve.controlPoints)));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 364 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static verb.core.NurbsSurfaceData surfaceKnotRefine(verb.core.NurbsSurfaceData surface, org.apache.commons.math3.linear.ArrayRealVector knotsToInsert, boolean useV)
	{
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> newPts = new haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>(new haxe.root.Array[]{});
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		org.apache.commons.math3.linear.ArrayRealVector knots = null;
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		int degree = 0;
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> ctrlPts = null;
		//line 403 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		if ( ! (useV) ) 
		{
			//line 404 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			ctrlPts = ((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (verb.core.Mat.transposeN(((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (surface.controlPoints) ))) );
			//line 405 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			knots = surface.knotsU;
			//line 406 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			degree = surface.degreeU;
		}
		else
		{
			//line 409 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			ctrlPts = surface.controlPoints;
			//line 410 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			knots = surface.knotsV;
			//line 411 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			degree = surface.degreeV;
		}
		
		//line 415 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		verb.core.NurbsCurveData c = null;
		//line 416 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		{
			//line 416 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int _g = 0;
			//line 416 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			while (( _g < ctrlPts.length ))
			{
				//line 416 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> cptrow = ctrlPts.__get(_g);
				//line 416 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				 ++ _g;
				//line 417 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				c = verb.eval.Modify.curveKnotRefine(new verb.core.NurbsCurveData(degree, knots, cptrow), knotsToInsert);
				//line 418 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				newPts.push(c.controlPoints);
			}
			
		}
		
		//line 421 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		org.apache.commons.math3.linear.ArrayRealVector newknots = c.knots;
		//line 424 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		if ( ! (useV) ) 
		{
			//line 425 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			newPts = ((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (verb.core.Mat.transposeN(((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (newPts) ))) );
			//line 426 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsSurfaceData(surface.degreeU, surface.degreeV, newknots, verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.ArrayRealVector) (surface.knotsV) ))), newPts);
		}
		else
		{
			//line 429 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsSurfaceData(surface.degreeU, surface.degreeV, verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.ArrayRealVector) (surface.knotsU) ))), newknots, newPts);
		}
		
	}
	
	
	public static haxe.root.Array<verb.core.NurbsCurveData> decomposeCurveIntoBeziers(verb.core.NurbsCurveData curve)
	{
		//line 445 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 447 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int degree = curve.degree;
			//line 447 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints = curve.controlPoints;
			//line 447 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector knots = curve.knots;
			//line 454 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<verb.eval.KnotMultiplicity> knotmults = verb.eval.Analyze.knotMultiplicities(knots);
			//line 455 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int reqMult = ( degree + 1 );
			//line 458 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 458 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 0;
				//line 458 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < knotmults.length ))
				{
					//line 458 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					verb.eval.KnotMultiplicity knotmult = knotmults.__get(_g);
					//line 458 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 ++ _g;
					//line 459 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					if (( knotmult.mult < reqMult )) 
					{
						//line 461 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						haxe.root.Array<java.lang.Object> knotsInsert = ((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (verb.core.Vec.rep(((int) (( reqMult - knotmult.mult )) ), ((java.lang.Object) (knotmult.knot) ))) )) );
						//line 462 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						verb.core.NurbsCurveData res = verb.eval.Modify.curveKnotRefine(new verb.core.NurbsCurveData(degree, knots, controlPoints), verb.core._Data.Vector_Impl_.fromArray(knotsInsert));
						//line 464 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						knots = res.knots;
						//line 465 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						controlPoints = res.controlPoints;
					}
					
				}
				
			}
			
			//line 469 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			double numCrvs = ( ( ((double) (verb.core._Data.Vector_Impl_.get_length(knots)) ) / reqMult ) - 1 );
			//line 470 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int crvKnotLength = ( reqMult * 2 );
			//line 472 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<verb.core.NurbsCurveData> crvs = new haxe.root.Array<verb.core.NurbsCurveData>(new verb.core.NurbsCurveData[]{});
			//line 474 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int i = 0;
			//line 475 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			while (( i < controlPoints.length ))
			{
				//line 476 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				java.lang.Object end = ( i + crvKnotLength );
				//line 476 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				if (haxe.lang.Runtime.eq(end, null)) 
				{
					//line 476 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					end = ( ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getDimension() - i );
				}
				
				//line 476 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				org.apache.commons.math3.linear.ArrayRealVector kts = verb.core._Data.Vector_Impl_._new(new org.apache.commons.math3.linear.ArrayRealVector(((org.apache.commons.math3.linear.RealVector) (((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getSubVector(((int) (i) ), ((int) (haxe.lang.Runtime.toInt(end)) ))) )));
				//line 477 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> pts = controlPoints.slice(i, ( i + reqMult ));
				//line 479 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				crvs.push(new verb.core.NurbsCurveData(degree, kts, pts));
				//line 481 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				i += reqMult;
			}
			
			//line 484 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return crvs;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 445 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static verb.core.NurbsCurveData curveKnotRefine(verb.core.NurbsCurveData curve, org.apache.commons.math3.linear.ArrayRealVector knotsToInsert)
	{
		//line 502 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 504 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			if (( verb.core._Data.Vector_Impl_.get_length(knotsToInsert) == 0 )) 
			{
				//line 504 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				return verb.eval.Make.clonedCurve(curve);
			}
			
			//line 506 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int degree = curve.degree;
			//line 506 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints = curve.controlPoints;
			//line 506 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector knots = curve.knots;
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int n = ( controlPoints.length - 1 );
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int m = ( ( n + degree ) + 1 );
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int r = ( verb.core._Data.Vector_Impl_.get_length(knotsToInsert) - 1 );
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int a = verb.eval.Eval.knotSpan(degree, ((org.apache.commons.math3.linear.ArrayRealVector) (knotsToInsert) ).getEntry(((int) (0) )), knots);
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int b = verb.eval.Eval.knotSpan(degree, ((org.apache.commons.math3.linear.ArrayRealVector) (knotsToInsert) ).getEntry(((int) (r) )), knots);
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints_post = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>();
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector knots_post = verb.core._Data.Vector_Impl_._new(null);
			//line 519 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 519 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 0;
				//line 519 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = ( ( a - degree ) + 1 );
				//line 519 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 519 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i = _g++;
					//line 520 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(i, controlPoints.__get(i));
				}
				
			}
			
			//line 523 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 523 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g2 = ( b - 1 );
				//line 523 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g3 = ( n + 1 );
				//line 523 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g2 < _g3 ))
				{
					//line 523 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i1 = _g2++;
					//line 524 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(( ( i1 + r ) + 1 ), controlPoints.__get(i1));
				}
				
			}
			
			//line 528 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 528 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g4 = 0;
				//line 528 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g5 = ( a + 1 );
				//line 528 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g4 < _g5 ))
				{
					//line 528 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i2 = _g4++;
					//line 529 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 529 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double v = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (i2) ));
						//line 529 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (i2) ), ((double) (v) ));
					}
					
				}
				
			}
			
			//line 532 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 532 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g6 = ( b + degree );
				//line 532 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g7 = ( m + 1 );
				//line 532 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g6 < _g7 ))
				{
					//line 532 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i3 = _g6++;
					//line 533 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 533 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double v1 = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (i3) ));
						//line 533 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (( ( i3 + r ) + 1 )) ), ((double) (v1) ));
					}
					
				}
				
			}
			
			//line 536 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int i4 = ( ( b + degree ) - 1 );
			//line 537 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int k = ( ( b + degree ) + r );
			//line 538 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int j = r;
			//line 540 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			while (( j >= 0 ))
			{
				//line 542 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( ( ((org.apache.commons.math3.linear.ArrayRealVector) (knotsToInsert) ).getEntry(((int) (j) )) <= ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (i4) )) ) && ( i4 > a ) ))
				{
					//line 543 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(( ( k - degree ) - 1 ), controlPoints.__get(( ( i4 - degree ) - 1 )));
					//line 544 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 544 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double v2 = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (i4) ));
						//line 544 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (k) ), ((double) (v2) ));
					}
					
					//line 545 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 -- k;
					//line 546 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					 -- i4;
				}
				
				//line 549 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				controlPoints_post.__set(( ( k - degree ) - 1 ), controlPoints_post.__get(( k - degree )));
				//line 551 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				{
					//line 551 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g8 = 1;
					//line 551 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int _g9 = ( degree + 1 );
					//line 551 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					while (( _g8 < _g9 ))
					{
						//line 551 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int l = _g8++;
						//line 553 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int ind = ( ( k - degree ) + l );
						//line 554 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double alfa = ( ((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).getEntry(((int) (( k + l )) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (knotsToInsert) ).getEntry(((int) (j) )) );
						//line 556 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						if (( java.lang.Math.abs(alfa) < verb.core.Constants.EPSILON )) 
						{
							//line 557 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							controlPoints_post.__set(( ind - 1 ), controlPoints_post.__get(ind));
						}
						else
						{
							//line 559 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							alfa /= ( ((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).getEntry(((int) (( k + l )) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( ( i4 - degree ) + l )) )) );
							//line 561 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							controlPoints_post.__set(( ind - 1 ), verb.core.Vec.add(verb.core.Vec.mul(alfa, controlPoints_post.__get(( ind - 1 ))), verb.core.Vec.mul(( 1.0 - alfa ), controlPoints_post.__get(ind))));
						}
						
					}
					
				}
				
				//line 568 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				{
					//line 568 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					double v3 = ((org.apache.commons.math3.linear.ArrayRealVector) (knotsToInsert) ).getEntry(((int) (j) ));
					//line 568 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (k) ), ((double) (v3) ));
				}
				
				//line 569 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				 -- k;
				//line 571 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				 -- j;
			}
			
			//line 575 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsCurveData(degree, knots_post, controlPoints_post);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 502 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static verb.core.NurbsCurveData curveKnotInsert(verb.core.NurbsCurveData curve, double u, int r)
	{
		//line 598 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
		try 
		{
			//line 600 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int degree = curve.degree;
			//line 600 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints = curve.controlPoints;
			//line 600 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector knots = curve.knots;
			//line 610 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int s = 0;
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int num_pts = controlPoints.length;
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int k = verb.eval.Eval.knotSpan(degree, u, knots);
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int num_pts_post = ( num_pts + r );
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints_temp = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>();
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			org.apache.commons.math3.linear.ArrayRealVector knots_post = verb.core._Data.Vector_Impl_._new(null);
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> controlPoints_post = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>();
			//line 612 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int i = 0;
			//line 623 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 623 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g = 1;
				//line 623 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g1 = ( k + 1 );
				//line 623 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g < _g1 ))
				{
					//line 623 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i1 = _g++;
					//line 624 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 624 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double v = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (i1) ));
						//line 624 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (i1) ), ((double) (v) ));
					}
					
				}
				
			}
			
			//line 628 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 628 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g2 = 1;
				//line 628 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g3 = ( r + 1 );
				//line 628 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g2 < _g3 ))
				{
					//line 628 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i2 = _g2++;
					//line 629 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (( k + i2 )) ), ((double) (u) ));
				}
				
			}
			
			//line 633 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 633 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g4 = ( k + 1 );
				//line 633 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g5 = verb.core._Data.Vector_Impl_.get_length(knots);
				//line 633 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g4 < _g5 ))
				{
					//line 633 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i3 = _g4++;
					//line 634 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 634 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						double v1 = ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (i3) ));
						//line 634 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						((org.apache.commons.math3.linear.ArrayRealVector) (knots_post) ).setEntry(((int) (( i3 + r )) ), ((double) (v1) ));
					}
					
				}
				
			}
			
			//line 640 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 640 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g6 = 0;
				//line 640 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g7 = ( ( k - degree ) + 1 );
				//line 640 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g6 < _g7 ))
				{
					//line 640 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i4 = _g6++;
					//line 641 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(i4, controlPoints.__get(i4));
				}
				
			}
			
			//line 645 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 645 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g8 = ( k - s );
				//line 645 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g9 = num_pts;
				//line 645 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g8 < _g9 ))
				{
					//line 645 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i5 = _g8++;
					//line 646 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(( i5 + r ), controlPoints.__get(i5));
				}
				
			}
			
			//line 650 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 650 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g10 = 0;
				//line 650 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g11 = ( ( degree - s ) + 1 );
				//line 650 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g10 < _g11 ))
				{
					//line 650 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i6 = _g10++;
					//line 651 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_temp.__set(i6, controlPoints.__get(( ( k - degree ) + i6 )));
				}
				
			}
			
			//line 654 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			int L = 0;
			//line 654 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			double alpha = ((double) (0) );
			//line 658 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 658 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g12 = 1;
				//line 658 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g13 = ( r + 1 );
				//line 658 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g12 < _g13 ))
				{
					//line 658 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int j = _g12++;
					//line 660 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					L = ( ( k - degree ) + j );
					//line 662 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					{
						//line 662 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g14 = 0;
						//line 662 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						int _g15 = ( ( ( degree - j ) - s ) + 1 );
						//line 662 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
						while (( _g14 < _g15 ))
						{
							//line 662 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							int i7 = _g14++;
							//line 664 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							alpha = ( (( u - ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( L + i7 )) )) )) / (( ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( ( i7 + k ) + 1 )) )) - ((org.apache.commons.math3.linear.ArrayRealVector) (knots) ).getEntry(((int) (( L + i7 )) )) )) );
							//line 666 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
							controlPoints_temp.__set(i7, verb.core.Vec.add(verb.core.Vec.mul(alpha, controlPoints_temp.__get(( i7 + 1 ))), verb.core.Vec.mul(( 1.0 - alpha ), controlPoints_temp.__get(i7))));
						}
						
					}
					
					//line 672 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(L, controlPoints_temp.__get(0));
					//line 673 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(( ( ( k + r ) - j ) - s ), controlPoints_temp.__get(( ( degree - j ) - s )));
				}
				
			}
			
			//line 678 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			{
				//line 678 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g16 = ( L + 1 );
				//line 678 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				int _g17 = ( k - s );
				//line 678 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
				while (( _g16 < _g17 ))
				{
					//line 678 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					int i8 = _g16++;
					//line 679 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
					controlPoints_post.__set(i8, controlPoints_temp.__get(( i8 - L )));
				}
				
			}
			
			//line 682 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			return new verb.core.NurbsCurveData(degree, knots_post, controlPoints_post);
		}
		catch (java.lang.Throwable typedException)
		{
			//line 598 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Modify.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
}


