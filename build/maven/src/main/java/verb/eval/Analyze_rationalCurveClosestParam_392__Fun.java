// Generated by Haxe 4.1.4
package verb.eval;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Analyze_rationalCurveClosestParam_392__Fun extends haxe.lang.Function
{
	public Analyze_rationalCurveClosestParam_392__Fun()
	{
		//line 392 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		super(3, 1);
	}
	
	
	public static verb.eval.Analyze_rationalCurveClosestParam_392__Fun __hx_current;
	
	@Override public double __hx_invoke3_f(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2, double __fn_float3, java.lang.Object __fn_dyn3)
	{
		//line 392 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector d = ( (( __fn_dyn3 == haxe.lang.Runtime.undefined )) ? (((org.apache.commons.math3.linear.ArrayRealVector) (((java.lang.Object) (__fn_float3) )) )) : (((org.apache.commons.math3.linear.ArrayRealVector) (__fn_dyn3) )) );
		//line 392 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> e = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (((java.lang.Object) (__fn_float2) )) )) : (((haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>) (__fn_dyn2) )) );
		//line 392 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double u = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((double) (__fn_float1) )) : (((double) (haxe.lang.Runtime.toDouble(__fn_dyn1)) )) );
		//line 394 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double f = verb.core.Vec.dot(e.__get(1), d);
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double s0 = verb.core.Vec.dot(e.__get(2), d);
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double s1 = verb.core.Vec.dot(e.__get(1), e.__get(1));
		//line 397 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double df = ( s0 + s1 );
		//line 401 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		return ( u - ( f / df ) );
	}
	
	
}


