// Generated by Haxe 4.1.4
package verb.core;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class SerializableBase extends haxe.lang.HxObject
{
	public SerializableBase(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public SerializableBase()
	{
		//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
		verb.core.SerializableBase.__hx_ctor_verb_core_SerializableBase(this);
	}
	
	
	protected static void __hx_ctor_verb_core_SerializableBase(verb.core.SerializableBase __hx_this)
	{
	}
	
	
	public java.lang.String serialize()
	{
		//line 21 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
		haxe.Serializer serializer = new haxe.Serializer();
		//line 22 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
		serializer.serialize(this);
		//line 23 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
		return serializer.toString();
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
		{
			//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
			if (( field != null )) 
			{
				//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
				switch (field.hashCode())
				{
					case -573479200:
					{
						//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
						if (field.equals("serialize")) 
						{
							//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
							__temp_executeDef1 = false;
							//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "serialize")) );
						}
						
						//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
		{
			//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
			boolean __temp_executeDef1 = true;
			//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
			if (( field != null )) 
			{
				//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
				switch (field.hashCode())
				{
					case -573479200:
					{
						//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
						if (field.equals("serialize")) 
						{
							//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
							__temp_executeDef1 = false;
							//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
							return this.serialize();
						}
						
						//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
			if (__temp_executeDef1) 
			{
				//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 19 "C:\\Users\\peter\\Development\\verb\\src\\verb\\core\\Serialization.hx"
				throw null;
			}
			
		}
		
	}
	
	
}


