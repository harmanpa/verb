// Generated by Haxe 4.1.4
package verb.eval;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Analyze_rationalSurfaceClosestParam_186__Fun extends haxe.lang.Function
{
	public Analyze_rationalSurfaceClosestParam_186__Fun()
	{
		//line 186 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		super(3, 0);
	}
	
	
	public static verb.eval.Analyze_rationalSurfaceClosestParam_186__Fun __hx_current;
	
	@Override public java.lang.Object __hx_invoke3_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2, double __fn_float3, java.lang.Object __fn_dyn3)
	{
		//line 186 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector r = ( (( __fn_dyn3 == haxe.lang.Runtime.undefined )) ? (((org.apache.commons.math3.linear.ArrayRealVector) (((java.lang.Object) (__fn_float3) )) )) : (((org.apache.commons.math3.linear.ArrayRealVector) (__fn_dyn3) )) );
		//line 186 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> e = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (((java.lang.Object) (__fn_float2) )) )) : (((haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>>) (__fn_dyn2) )) );
		//line 186 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector uv = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((org.apache.commons.math3.linear.ArrayRealVector) (((java.lang.Object) (__fn_float1) )) )) : (((org.apache.commons.math3.linear.ArrayRealVector) (__fn_dyn1) )) );
		//line 191 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector Su = e.__get(1).__get(0);
		//line 192 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector Sv = e.__get(0).__get(1);
		//line 194 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector Suu = e.__get(2).__get(0);
		//line 195 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector Svv = e.__get(0).__get(2);
		//line 197 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector Suv = e.__get(1).__get(1);
		//line 198 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector Svu = e.__get(1).__get(1);
		//line 200 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double f = verb.core.Vec.dot(Su, r);
		//line 201 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double g = verb.core.Vec.dot(Sv, r);
		//line 203 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		haxe.root.Array<java.lang.Object> k = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) ( - (f) ) ), ((java.lang.Object) ( - (g) ) )});
		//line 205 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double J00 = ( verb.core.Vec.dot(Su, Su) + verb.core.Vec.dot(Suu, r) );
		//line 206 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double J01 = ( verb.core.Vec.dot(Su, Sv) + verb.core.Vec.dot(Suv, r) );
		//line 207 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double J10 = ( verb.core.Vec.dot(Su, Sv) + verb.core.Vec.dot(Svu, r) );
		//line 208 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		double J11 = ( verb.core.Vec.dot(Sv, Sv) + verb.core.Vec.dot(Svv, r) );
		//line 210 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> J = new haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>(new org.apache.commons.math3.linear.ArrayRealVector[]{verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (J00) ), ((java.lang.Object) (J01) )})), verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (J10) ), ((java.lang.Object) (J11) )}))});
		//line 219 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		org.apache.commons.math3.linear.ArrayRealVector d = verb.core.Mat.solve(J, verb.core._Data.Vector_Impl_.fromArray(k));
		//line 221 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Analyze.hx"
		return verb.core.Vec.add(d, uv);
	}
	
	
}


