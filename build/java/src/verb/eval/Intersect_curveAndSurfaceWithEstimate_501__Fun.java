// Generated by Haxe 4.1.4
package verb.eval;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Intersect_curveAndSurfaceWithEstimate_501__Fun extends haxe.lang.Function
{
	public Intersect_curveAndSurfaceWithEstimate_501__Fun(verb.core.NurbsSurfaceData surface, verb.core.NurbsCurveData curve)
	{
		//line 501 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
		super(1, 0);
		//line 501 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
		this.surface = surface;
		//line 501 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
		this.curve = curve;
	}
	
	
	@Override public java.lang.Object __hx_invoke1_o(double __fn_float1, java.lang.Object __fn_dyn1)
	{
		//line 501 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
		try 
		{
			//line 501 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			org.apache.commons.math3.linear.ArrayRealVector x = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((org.apache.commons.math3.linear.ArrayRealVector) (((java.lang.Object) (__fn_float1) )) )) : (((org.apache.commons.math3.linear.ArrayRealVector) (__fn_dyn1) )) );
			//line 503 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector> dc = verb.eval.Eval.rationalCurveDerivatives(this.curve, ((org.apache.commons.math3.linear.ArrayRealVector) (x) ).getEntry(((int) (0) )), 1);
			//line 503 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			haxe.root.Array<haxe.root.Array<org.apache.commons.math3.linear.ArrayRealVector>> ds = verb.eval.Eval.rationalSurfaceDerivatives(this.surface, ((org.apache.commons.math3.linear.ArrayRealVector) (x) ).getEntry(((int) (1) )), ((org.apache.commons.math3.linear.ArrayRealVector) (x) ).getEntry(((int) (2) )), 1);
			//line 506 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			org.apache.commons.math3.linear.ArrayRealVector r = verb.core.Vec.sub(ds.__get(0).__get(0), dc.__get(0));
			//line 508 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			org.apache.commons.math3.linear.ArrayRealVector drdt = verb.core.Vec.mul(-1.0, dc.__get(1));
			//line 509 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			org.apache.commons.math3.linear.ArrayRealVector drdu = ds.__get(1).__get(0);
			//line 510 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			org.apache.commons.math3.linear.ArrayRealVector drdv = ds.__get(0).__get(1);
			//line 512 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			return verb.core._Data.Vector_Impl_.fromArray(new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{((java.lang.Object) (( 2.0 * verb.core.Vec.dot(drdt, r) )) ), ((java.lang.Object) (( 2.0 * verb.core.Vec.dot(drdu, r) )) ), ((java.lang.Object) (( 2.0 * verb.core.Vec.dot(drdv, r) )) )}));
		}
		catch (java.lang.Throwable typedException)
		{
			//line 501 "C:\\Users\\peter\\Development\\verb\\src\\verb\\eval\\Intersect.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public verb.core.NurbsSurfaceData surface;
	
	public verb.core.NurbsCurveData curve;
	
}


