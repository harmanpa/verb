<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace verb\core;

use \php\Boot;

class MeshIntersectionPoint {
	/**
	 * @var MeshIntersectionPoint
	 */
	public $adj;
	/**
	 * @var int
	 */
	public $faceIndex0;
	/**
	 * @var int
	 */
	public $faceIndex1;
	/**
	 * @var MeshIntersectionPoint
	 */
	public $opp;
	/**
	 * @var \Array_hx
	 */
	public $point;
	/**
	 * @var \Array_hx
	 */
	public $uv0;
	/**
	 * @var \Array_hx
	 */
	public $uv1;
	/**
	 * @var bool
	 */
	public $visited;

	/**
	 * @param \Array_hx $uv0
	 * @param \Array_hx $uv1
	 * @param \Array_hx $point
	 * @param int $faceIndex0
	 * @param int $faceIndex1
	 * 
	 * @return void
	 */
	public function __construct ($uv0, $uv1, $point, $faceIndex0, $faceIndex1) {
		#src/verb/core/Intersections.hx:57: characters 33-38
		$this->visited = false;
		#src/verb/core/Intersections.hx:56: characters 46-50
		$this->adj = null;
		#src/verb/core/Intersections.hx:55: characters 46-50
		$this->opp = null;
		#src/verb/core/Intersections.hx:60: characters 9-23
		$this->uv0 = $uv0;
		#src/verb/core/Intersections.hx:61: characters 9-23
		$this->uv1 = $uv1;
		#src/verb/core/Intersections.hx:62: characters 9-27
		$this->point = $point;
	}
}

Boot::registerClass(MeshIntersectionPoint::class, 'verb.core.MeshIntersectionPoint');
