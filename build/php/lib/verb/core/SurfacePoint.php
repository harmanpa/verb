<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace verb\core;

use \php\Boot;

class SurfacePoint {
	/**
	 * @var bool
	 */
	public $degen;
	/**
	 * @var int
	 */
	public $id;
	/**
	 * @var \Array_hx
	 */
	public $normal;
	/**
	 * @var \Array_hx
	 */
	public $point;
	/**
	 * @var \Array_hx
	 */
	public $uv;

	/**
	 * @param float $u
	 * @param float $v
	 * 
	 * @return SurfacePoint
	 */
	public static function fromUv ($u, $v) {
		#src/verb/core/Intersections.hx:155: characters 9-52
		return new SurfacePoint(null, null, \Array_hx::wrap([
			$u,
			$v,
		]));
	}

	/**
	 * @param \Array_hx $point
	 * @param \Array_hx $normal
	 * @param \Array_hx $uv
	 * @param int $id
	 * @param bool $degen
	 * 
	 * @return void
	 */
	public function __construct ($point, $normal, $uv, $id = -1, $degen = false) {
		#src/verb/core/Intersections.hx:146: lines 146-152
		if ($id === null) {
			$id = -1;
		}
		if ($degen === null) {
			$degen = false;
		}
		#src/verb/core/Intersections.hx:147: characters 9-21
		$this->uv = $uv;
		#src/verb/core/Intersections.hx:148: characters 9-27
		$this->point = $point;
		#src/verb/core/Intersections.hx:149: characters 9-29
		$this->normal = $normal;
		#src/verb/core/Intersections.hx:150: characters 9-21
		$this->id = $id;
		#src/verb/core/Intersections.hx:151: characters 9-27
		$this->degen = $degen;
	}
}

Boot::registerClass(SurfacePoint::class, 'verb.core.SurfacePoint');
